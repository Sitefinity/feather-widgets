<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Sitefinity.Frontend</name>
    </assembly>
    <members>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager">
            <summary>
            This class manages the behavior when a grid file is moved over the application folder structure.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.IFileManager">
            <summary>
            Classes that implement this interface should define the Sitefinity's behavior when a file is moved over the application folder structure.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.IFileManager.FileAdded(System.String,System.String,System.String)">
            <summary>
            Reacts when a file is added to the folder.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.IFileManager.FileDeleted(System.String,System.String)">
            <summary>
            Reacts on file deletion.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.IFileManager.FileRenamed(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Reacts on file renaming.
            </summary>
            <param name="newFileName">New name of the file.</param>
            <param name="oldFileName">Old name of the file.</param>
            <param name="newFilePath">The new file path.</param>
            <param name="oldFilePath">The old file path.</param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.GridTemplateExtension">
            <summary>
            Allowed extension for grid template files.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.FileAdded(System.String,System.String,System.String)">
            <summary>
            Process the file if such is added to the existing folder.
            </summary>
            <param name="fileName"></param>
            <param name="filePath"></param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.FileDeleted(System.String,System.String)">
            <summary>
            Called on file deletion
            </summary>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.FileRenamed(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Reacts on file renaming
            </summary>
            <param name="newFileName">New name of the file.</param>
            <param name="oldFileName">Old name of the file.</param>
            <param name="newFilePath"></param>
            <param name="oldFilePath"></param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.IsFileInValidFolder(System.String,System.String)">
            <summary>
            Determines whether a file exists on the specified location and whether it is applicable for the current application.
            </summary>
            <remarks>
            Valid locations depends on the values inside the <see cref="P:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.FolderPathStructure"/>.
            </remarks>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
            <returns>true if the file exists and is placed under the application root in a folder [package]/GridSystem/Templates/ .</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.IsFileValid(System.String,System.String,System.String)">
            <summary>
            Determines whether specified file is exist and is eligible for registration.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.GetFileName(System.String)">
            <summary>
            Gets the name of the file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.folderPathStructure">
            <summary>
            The folder path structure
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.FolderPathStructure">
            <summary>
            Gets the required folder path structure. Only grid files placed inside the specified folder structure will trigger automatic creation of the templates.
            </summary>
            <value>
            The folder path structure.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.GridFileManager.WidgetRegistrator">
            <summary>
            Gets the widget registrator.
            </summary>
            <value>
            The widget registrator.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.FileChangeType">
            <summary>
            Represents the file operations that would trigger reactions during the file monitoring.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitoringInitializer">
            <summary>
            This class contains logic for configuring the file monitoring functionality. 
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitoringInitializer.Initialize">
            <summary>
            Initializes and configure file monitoring functionality.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitoringInitializer.RegisterFileObservers">
            <summary>
            Registers the file observers.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory">
            <summary>
            This class represents DTO for working with monitored directories.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory"/> class.
            </summary>
            <param name="path">The path.</param>
            <param name="isPackage">if set to <c>true</c> [is package].</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory.Equals(System.Object)" -->
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory.Equals(Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory,Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <paramref name="T"/> to compare.</param>
            <param name="y">The second object of type <paramref name="T"/> to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory.GetHashCode(Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory.Path">
            <summary>
            Gets or sets the directory path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory.IsPackage">
            <summary>
            Gets or sets a value indicating whether the directory wraps the packages.
            </summary>
            <value>
              <c>true</c> whether it is package directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FrontendModule">
            <summary>
            A module that will be invoked by Sitefinity.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FrontendModule.Install(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the specified initializer.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FrontendModule.Initialize(Telerik.Sitefinity.Services.ModuleSettings)">
            <summary>
            Initializes the service with specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FrontendModule.Upgrade(Telerik.Sitefinity.Abstractions.SiteInitializer,System.Version)">
            <summary>
            Upgrades this module from the specified version.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
            <param name="upgradeFrom">The version this module us upgrading from.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FrontendModule.GetModuleConfig">
            <summary>
            Gets the module configuration.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FrontendModule.Bootstrapper_Initialized(System.Object,Telerik.Sitefinity.Data.ExecutedEventArgs)">
            <summary>
            Handles the Initialized event of the Bootstrapper.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Sitefinity.Data.ExecutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FrontendModule.LandingPageId">
            <summary>
            Gets the landing page id for each module inherit from <see cref="T:Telerik.Sitefinity.Services.SecuredModuleBase"/> class.
            </summary>
            <value>The landing page id.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FrontendModule.Managers">
            <summary>
            Gets the CLR types of all data managers provided by this module.
            </summary>
            <value>An array of <see cref="T:System.Type"/> objects.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator">
            <summary>
            This class register the grid template files in the PageLayout section of the toolbox.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.GridFolderPathStringTemplate">
            <summary>
            The grid folder path string template
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.GridSectionNameSuffix">
            <summary>
            The grid section name suffix
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.GridSectionTitleSuffix">
            <summary>
            The grid section title suffix
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.RegisterToolboxItem(System.String,System.String,System.String)">
            <summary>
            Registers the grid widget in toolbox.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="packageName">Name of the package.</param>
            <param name="oldFileName">Old name of the file.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.UnregisterToolboxItem(System.String,System.String)">
            <summary>
            Unregisters the toolbox item.
            </summary>
            <param name="contentTypeName">Name of the content type.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.UpdateControlData(System.String,System.String)">
            <summary>
            Updates the control data.
            </summary>
            <param name="newFileName">New name of the file.</param>
            <param name="oldFileName">Old name of the file.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.GetOrCreateToolBoxSection(Telerik.Sitefinity.Modules.Pages.Configuration.ToolboxesConfig,System.String,System.String)">
            <summary>
            Gets existing or create a tool box section for the grid controls.
            </summary>
            <param name="toolboxConfig">The toolbox configuration.</param>
            <param name="sectionName">Name of the section.</param>
            <param name="sectionTitle">The section title.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.AddOrRenameGridControl(Telerik.Sitefinity.Configuration.ConfigElementList{Telerik.Sitefinity.Modules.Pages.Configuration.ToolboxItem},Telerik.Sitefinity.Frontend.GridSystem.GridControlData,System.String)">
            <summary>
            Adds or renames the grid control.
            </summary>
            <param name="parent">The parent.</param>
            <param name="data">The data.</param>
            <param name="oldFileName">Old name of the file.</param>
            <exception cref="T:System.ArgumentNullException">data</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.CreateGridControlsData(System.String)">
            <summary>
            Creates the grid controls data.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridWidgetRegistrator.GetFileNameWithoutExtension(System.String)">
            <summary>
            Gets the file name without extension.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.GridSystem.GridControlData">
            <summary>
            This class is used as a data model when creating grid controls 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.GridSystem.GridControlData.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.GridSystem.GridControlData.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.GridSystem.GridControlData.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>
            The layout template path.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.GridSystem.GridControlData.CssClass">
            <summary>
            Gets or sets the CSS class.
            </summary>
            <value>
            The CSS class.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.InlineEditing.HtmlProcessor">
            <summary>
            This class contains helper methods for creating the necessary HTML processing which makes the InlineEditing possible. 
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.HtmlProcessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.InlineEditing.HtmlProcessor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.HtmlProcessor.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.InlineEditing.HtmlProcessor"/> class.
            </summary>
            <param name="isInlineEditing">Value indicating whether HTML should be generated for inline editing.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.HtmlProcessor.CreateInlineEditingRegion(System.IO.TextWriter,System.String,System.String,System.Guid)">
            <summary>
            Creates a region which has the required by the InlineEditing attributes.
            </summary>
            <param name="writer">The writer.</param>
            <param name="providerName">Name of the provider.</param>
            <param name="type">The type.</param>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.HtmlProcessor.GetStringContent(System.Object,System.String)">
            <summary>
            Gets the string content from a model by a given property name.
            If the property is marked with FieldInfoAttribute the text will be wrapped into a InlineEditing region.
            </summary>
            <param name="model">The model.</param>
            <param name="propName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.InlineEditing.HtmlRegion">
            <summary>
            This class is used to create an HTML region. 
            It closes the provided tag on dispose.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.HtmlRegion.#ctor(System.IO.TextWriter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.InlineEditing.HtmlRegion"/> class.
            </summary>
            <param name="writer">The writer.</param>
            <param name="htmlTagType">Type of the HTML tag.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.HtmlRegion.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InterfaceMappings.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Modules.ControlTemplates.Web.UI.MvcControlTemplateEditor">
            <summary>
            Override the original control template editor for Mvc based widgets
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Modules.ControlTemplates.Web.UI.MvcControlTemplateEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Modules.ControlTemplates.Web.UI.MvcControlTemplateEditor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Modules.ControlTemplates.Web.UI.MvcControlTemplateEditor.GetScriptReferences">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Modules.ControlTemplates.Web.UI.MvcControlTemplateEditor.GetScriptDescriptors">
            <summary>
            Gets Mvc controllers fullnames for current Templatable Controls.
            </summary>
            <returns>List of <see cref="T:System.Web.UI.ScriptDescriptor"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Modules.ControlTemplates.Web.UI.MvcControlTemplateEditor.GetRestoreButtonsClientIds">
            <summary>
            Gets the restore buttons client ids.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Modules.ControlTemplates.Web.UI.MvcControlTemplateEditor.ClientComponentType">
            <inheritdoc/>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.CommentsHelpers">
            <summary>
            Holds helpers related to Comments widget
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.CommentsHelpers.CommentsCount(System.Web.Mvc.HtmlHelper,System.String,Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Returns the CommentsCount widget if exist, else render error message
            </summary>
            <param name="helper">The helper.</param>
            <param name="navigateUrl">The navigate URL.</param>
            <param name="item">The commented item.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.CommentsHelpers.CommentsCount(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Returns the CommentsCount widget if exist, else render error message
            </summary>
            <param name="helper">The HTML helper.</param>
            <param name="navigateUrl">The navigate URL.</param>
            <param name="threadKey">The thread key.</param>
            <param name="allowComments">if not null this value will override the configuration for allowing comments.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.CommentsHelpers.CommentsList(System.Web.Mvc.HtmlHelper,Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Renders comments list.
            </summary>
            <param name="helper">The helper.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.CommentsHelpers.CommentsList(System.Web.Mvc.HtmlHelper,Telerik.Sitefinity.Model.IDataItem,System.String)">
            <summary>
            Renders comments list.
            </summary>
            <param name="helper">The helper.</param>
            <param name="item">The item.</param>
            <param name="title">The title.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.EmailAddressAttribute">
            <summary>
            This class represents <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> and should be used when one needs to validate email property.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.EmailAddressAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
            <inheritDoc/>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.EmailAddressAttribute.IsValid(System.Object)">
            <inheritDoc/>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.EmailAddressAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritDoc/>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException">
            <summary>
            This type of exception is thrown when sections with duplicating names are found on the current page.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException"/> class.
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException"/> class.
            </summary>
            <param name="sectionName">Name of the section.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MvcMasterPage">
            <summary>
            A MasterPage that is dynamically constructed from the MasterPageFile without compilation.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MvcMasterPage.ApplyToPage(System.Web.UI.Page)">
            <summary>
            Applies the master to the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.SectionRenderer">
            <summary>
            This control is responsible for rendering the section content.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.SectionRenderer.IsAvailable(System.Web.UI.Page,System.String)">
            <summary>
            Determines whether the specified section is available on the page.
            </summary>
            <param name="page">The page.</param>
            <param name="sectionName">Name of the section.</param>
            <returns>True if the section is available on the page and false otherwise.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.SectionRenderer.MarkAvailability(System.Web.UI.Page,System.String)">
            <summary>
            Marks the specified section as availabile.
            </summary>
            <param name="page">The page.</param>
            <param name="sectionName">Name of the section.</param>
            <exception cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.DuplicateSectionException"></exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.SectionRenderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.SectionRenderer.Name">
            <summary>
            Gets or sets the name of the section.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.PageInitializer">
            <summary>
            Instances of this are used to manipulated a page right after it is created.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.PageInitializer.Initialize(System.Web.IHttpHandler)">
            <summary>
            Initializes the specified handler as a page. This method is called right after the handler is created and can be used to add controls to the Page.
            </summary>
            <param name="handler">The handler.</param>
            <exception cref="T:System.ArgumentNullException">handler</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.PageInitializer.GetInlineStyle">
            <summary>
            Gets the inline style.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.MvcPageEditorRouteHandler">
            <summary>
            Represents an extended route handler for Sitefinity's page editor that injects MVC specific logic.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.MvcPageEditorRouteHandler.BuildHandler(System.Web.Routing.RequestContext,Telerik.Sitefinity.Pages.Model.IPageData)">
            <summary>
            Builds a handler for the specified request and page data.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="pageData">The page data.</param>
            <returns>The handelr.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.MvcPageRouteHandler">
            <summary>
            Extended route handler for Sitefinity pages that injects MVC specific logic.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.MvcPageRouteHandler.BuildHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns>An object that processes the request.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.MvcTemplateEditorRouteHandler">
            <summary>
            Extended version of the TemplateEditorRouteHandler that injects logic handling MVC layout files.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.MvcTemplateEditorRouteHandler.BuildHandler(System.Web.Routing.RequestContext,Telerik.Sitefinity.Pages.Model.IPageData)">
            <summary>
            Builds the handler.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="pageData">The page data.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.ScriptDependencyConfigModel">
            <summary>
            This class represents a JSON configuration for component cefinitions.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ScriptDependencyConfigModel.Scripts">
            <summary>
            Gets or sets the scripts.
            </summary>
            <value>
            the scripts.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ScriptDependencyConfigModel.Components">
            <summary>
            Gets or sets the components.
            </summary>
            <value>
            the components.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.RequiredIfExistAttribute">
            <summary>
            This class represents <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> and should be used when one needs to validate property only if another property has value.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.RequiredIfExistAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.RequiredIfExistAttribute"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Attributes.RequiredIfExistAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritDoc/>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources">
            <summary>
            Localizable strings for the client components.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources"/> class. 
            Initializes new instance of <see cref="T:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources"/> class with the default <see cref="T:Telerik.Sitefinity.Localization.Data.ResourceDataProvider"/>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.#ctor(Telerik.Sitefinity.Localization.Data.ResourceDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources"/> class.
            </summary>
            <param name="dataProvider">The data provider.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ClientComponentsResourcesTitle">
            <summary>
            Gets Title for the Client Components resources class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ClientComponentsResourcesDescription">
            <summary>
            Gets Description for the Client Components resources class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertHyperlink">
            <summary>
            Insert hyperlink
            </summary>
            <value>Insert hyperlink</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertImage">
            <summary>
            Insert image
            </summary>
            <value>Insert image</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertFile">
            <summary>
            Insert file
            </summary>
            <value>Insert file</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertVideo">
            <summary>
            Insert video
            </summary>
            <value>Insert video</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SfActionAttrRequired">
            <summary>
            phrase: sfAction attribute is required!
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertDocumentLink">
            <summary>
            phrase: Insert a document link
            </summary>
            <value>Insert a document link</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Title">
            <summary>
            word: Title
            </summary>
            <value>Title</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.RecommendedCharacters">
            <summary>
            phrase: Less than 35 characters are recommended
            </summary>
            <value>Less than 35 characters are recommended</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.TitleRequired">
            <summary>
            phrase: Title is required
            </summary>
            <value>Title is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CssClasses">
            <summary>
            phrase: CSS classes
            </summary>
            <value>CSS classes</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Done">
            <summary>
            word: Done
            </summary>
            <value>Done</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Image">
            <summary>
            word: Image
            </summary>
            <value>Image</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AlternativeText">
            <summary>
            phrase: Alternative text
            </summary>
            <value>Alternative text</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Alignment">
            <summary>
            word: Alignment
            </summary>
            <value>Alignment</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.None">
            <summary>
            word: None
            </summary>
            <value>None</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Left">
            <summary>
            word: Left
            </summary>
            <value>Left</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Center">
            <summary>
            word: Center
            </summary>
            <value>Center</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Right">
            <summary>
            word: Right
            </summary>
            <value>Right</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ImageThumbnail">
            <summary>
            phrase: Image thumbnail
            </summary>
            <value>Image thumbnail</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Margins">
            <summary>
            word: Margins
            </summary>
            <value>Margins</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Top">
            <summary>
            word: Top
            </summary>
            <value>Top</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Bottom">
            <summary>
            word: Bottom
            </summary>
            <value>Bottom</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Type">
            <summary>
            word: Type
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.FileSize">
            <summary>
            phrase: File size:
            </summary>
            <value>File size:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Uploaded">
            <summary>
            word: Uploaded:
            </summary>
            <value>Uploaded:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ChangeImage">
            <summary>
            phrase: Change image
            </summary>
            <value>Change image</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.EditAllProperties">
            <summary>
            phrase: Edit all properties
            </summary>
            <value>Edit all properties</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectImage">
            <summary>
            phrase: Select image
            </summary>
            <value>Select image</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ChangeDocument">
            <summary>
            phrase: Change document
            </summary>
            <value>Change document</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectDocument">
            <summary>
            phrase: Select document
            </summary>
            <value>Select document</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.DocumentHasBeenDeleted">
            <summary>
            phrase: The document has been deleted or unpublished
            </summary>
            <value>The document has been deleted or unpublished</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CreatedOn">
            <summary>
            phrase: Created on:
            </summary>
            <value>Created on:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Library">
            <summary>
            word: Library:
            </summary>
            <value>Library:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Size">
            <summary>
            word: Size:
            </summary>
            <value>Size:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.By">
            <summary>
            word: by
            </summary>
            <value>by</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectDocumentFromComputer">
            <summary>
            phrase: Select document from your computer
            </summary>
            <value>Select document from your computer</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SimplyDragAndDrop" -->
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SearchByTitle">
            <summary>
            phrase: Search by title...
            </summary>
            <value>Search by title...</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AllLibraries">
            <summary>
            phrase: All libraries
            </summary>
            <value>All libraries</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoDocuments">
            <summary>
            phrase: No documents
            </summary>
            <value>No documents</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SortingAndView">
            <summary>
            phrase: Sorting and view
            </summary>
            <value>Sorting and view</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.UploadDocument">
            <summary>
            phrase: Upload document
            </summary>
            <value>Upload document</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AlreadyUploadedDocuments">
            <summary>
            phrase: Already uploaded documents
            </summary>
            <value>Already uploaded documents</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Libraries">
            <summary>
            word: Libraries
            </summary>
            <value>Libraries</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Tags">
            <summary>
            word: Tags
            </summary>
            <value>Tags</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Categories">
            <summary>
            word: Categories
            </summary>
            <value>Categories</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Dates">
            <summary>
            word: Dates
            </summary>
            <value>Dates</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.OtherFilterOptions">
            <summary>
            phrase: Other filter options
            </summary>
            <value>Other filter options</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NarrowByTyping">
            <summary>
            phrase: Narrow by typing...
            </summary>
            <value>Narrow by typing...</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.DocumentToUpload">
            <summary>
            phrase: Document to upload
            </summary>
            <value>Document to upload</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WhereToStoreDocument">
            <summary>
            phrase: Where to store the uploaded document?
            </summary>
            <value>Where to store the uploaded document?</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoItemsCreated">
            <summary>
            No items have been created yet.
            phrase: No items have been created yet.
            </summary>
            <value>No items have been created yet.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoItemsFound">
            <summary>
            phrase: No items found
            </summary>
            <value>No items found</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.All">
            <summary>
            word: All
            </summary>
            <value>All</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Selected">
            <summary>
            word: Selected
            </summary>
            <value>Selected</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.DoneSelecting">
            <summary>
            phrase: Done selecting
            </summary>
            <value>Done selecting</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Cancel">
            <summary>
            word: Cancel
            </summary>
            <value>Cancel</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Close">
            <summary>
            word: Close
            </summary>
            <value>Close</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoItemsSelected">
            <summary>
            phrase: No items have been selected yet.
            </summary>
            <value>No items have been selected yet.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NotTranslated">
            <summary>
            phrase: not translated
            </summary>
            <value>not translated</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Date">
            <summary>
            phrase: Date...
            </summary>
            <value>Date... 1</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AddHour">
            <summary>
            phrase: Add hour
            </summary>
            <value>Add hour</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AddMinutes">
            <summary>
            phrase: Add minutes
            </summary>
            <value>Add minutes</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Select">
            <summary>
            word: Select
            </summary>
            <value>Select</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Change">
            <summary>
            word: Change
            </summary>
            <value>Change</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectDates">
            <summary>
            phrase: Select dates
            </summary>
            <value>Select dates</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.DisplayPublishedItems">
            <summary>
            phrase: Display items published in...
            </summary>
            <value>Display items published in...</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AnyTime">
            <summary>
            phrase: Any time
            </summary>
            <value>Any time</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last">
            <summary>
            word: Last
            </summary>
            <value>Last</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Day">
            <summary>
            word: day
            </summary>
            <value>day</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Week">
            <summary>
            word: week
            </summary>
            <value>week</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Month">
            <summary>
            word: month
            </summary>
            <value>month</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Year">
            <summary>
            word: year
            </summary>
            <value>year</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Plural">
            <summary>
            (s)
            </summary>
            <value>(s)</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CustomRange">
            <summary>
            phrase: Custom range...
            </summary>
            <value>Custom range...</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.From">
            <summary>
            word: From
            </summary>
            <value>From</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.To">
            <summary>
            word: To
            </summary>
            <value>To</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Language">
            <summary>
            word: Language
            </summary>
            <value>Language</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Site">
            <summary>
            word: Site
            </summary>
            <value>Site</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ExternalUrls">
            <summary>
            phrase: External URLs
            </summary>
            <value>External URLs</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertLinkButton">
            <summary>
            phrase: Insert link
            </summary>
            <value>Insert link</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertLinkHeader">
            <summary>
            phrase: Insert a link
            </summary>
            <value>Insert a link</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.TextToDisplay">
            <summary>
            phrase: Text to display
            </summary>
            <value>Text to display</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.LinkTo">
            <summary>
            phrase: Link to
            </summary>
            <value>Link to</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WebAddress">
            <summary>
            phrase: Web address
            </summary>
            <value>Web address</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.PageFromThisSite">
            <summary>
            phrase: Page from this site
            </summary>
            <value>Page from this site</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Anchor">
            <summary>
            word: Anchor
            </summary>
            <value>Anchor</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Email">
            <summary>
            word: Email
            </summary>
            <value>Email</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WebAddressTextToDisplayExample">
            <summary>
            phrase: Weather forecast
            </summary>
            <value>Weather forecast</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.OpenInNewWindow">
            <summary>
            phrase: Open this link in a new window
            </summary>
            <value>Open this link in a new window</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.TestThisLink">
            <summary>
            phrase: Test this link:
            </summary>
            <value>Test this link:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectOption">
            <summary>
            phrase: - Select -
            </summary>
            <value>- Select -</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Example">
            <summary>
            phrase: Example:
            </summary>
            <value>Example:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AnchorDescription">
            <summary>
            phrase: A list of anchors already inserted in the text.
            </summary>
            <value>A list of anchors already inserted in the text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.HowToInsertAnchor">
            <summary>
            phrase: How to insert an anchor?
            </summary>
            <value>How to insert an anchor?</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AnchorTextToDisplayExample">
            <summary>
            phrase: FAQ list
            </summary>
            <value>FAQ list</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoAnchorsSelected">
            <summary>
            phrase: No anchors have been inserted in the text.
            </summary>
            <value>No anchors have been inserted in the text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.EmailAddress">
            <summary>
            phrase: Email address
            </summary>
            <value>Email address</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InvalidEmailMessage">
            <summary>
            phrase: You have entered an invalid email address
            </summary>
            <value>You have entered an invalid email address</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.EmailTextToDisplayExample">
            <summary>
            phrase: Send email to John
            </summary>
            <value>Send email to John</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NewsSelectorHeader">
            <summary>
            phrase: Select news
            </summary>
            <value>Select news</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.DynamicItemsSelectorHeader">
            <summary>
            phrase: Select content
            </summary>
            <value>Select content</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.RoleSelectorHeader">
            <summary>
            phrase: Select a role
            </summary>
            <value>Select a role</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.LibrarySelectorHeader">
            <summary>
            phrase: Select a library
            </summary>
            <value>Select a library</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.PageSelectorHeader">
            <summary>
            phrase: Select a page
            </summary>
            <value>Select a page</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CategorySelectorHeader">
            <summary>
            phrase: Select categories
            </summary>
            <value>Select categories</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoExternalUrlsAdded">
            <summary>
            phrase: No external URLs have been added.
            </summary>
            <value>No external URLs have been added.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.EnterTitle">
            <summary>
            phrase: Enter Title
            </summary>
            <value>Enter Title</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.EnterUrl">
            <summary>
            phrase: Enter URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.OpenExternalUrlInNewWindow">
            <summary>
            phrase: Open external URLs in new tab/window
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AddExternalUrl">
            <summary>
            phrase: Add external URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.HourOption">
            <summary>
            phrase: - Hour -
            </summary>
            <value>- Hour -</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.MinuteOption">
            <summary>
            phrase: - Minute -
            </summary>
            <value>- Minute -</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.UploadImage">
            <summary>
            phrase: Upload image
            </summary>
            <value>Upload image</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ImageToUpload">
            <summary>
            phrase: Image to upload
            </summary>
            <value>Image to upload</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WhereToStoreImage">
            <summary>
            phrase: Where to store the uploaded image?
            </summary>
            <value>Where to store the uploaded image?</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectLibraryErrorMessage">
            <summary>
            phrase: You must select the library in which the files ought to be uploaded.
            </summary>
            <value>You must select the library in which the files ought to be uploaded.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Upload">
            <summary>
            word: Upload
            </summary>
            <value>Upload</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CategoriesAndTags">
            <summary>
            phrase: Categories and tags
            </summary>
            <value>Categories and tags</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CustomThumbnailSize">
            <summary>
            phrase: Custom thumbnail size
            </summary>
            <value>Custom thumbnail size</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ResizeImage">
            <summary>
            phrase: Resize image
            </summary>
            <value>Resize image</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ResizeToAreaDescription">
            <summary>
            phrase: Generated image will be resized to desired area
            </summary>
            <value>Generated image will be resized to desired area</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ResizeToAreaExample">
            <summary>
            phrase: resize to area example
            </summary>
            <value>resize to area example</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CropToAreaDescription">
            <summary>
            phrase: Generated image will be resized and cropped to desired area
            </summary>
            <value>Generated image will be resized and cropped to desired area</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CropToAreaExample">
            <summary>
            phrase: crop to area example
            </summary>
            <value>crop to area example</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ResizeToArea">
            <summary>
            phrase: Resize to area
            </summary>
            <value>Resize to area</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.CropToArea">
            <summary>
            phrase: Crop to area
            </summary>
            <value>Crop to area</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WhatIsThisLink">
            <summary>
            phrase: What's this?
            </summary>
            <value>What's this?</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.MaxWidth">
            <summary>
            phrase: Max width
            </summary>
            <value>Max width</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WidthHeightErrorMessage">
            <summary>
            phrase: Value must be an integer between 1 and 9999 inclusive.
            </summary>
            <value>Value must be an integer between 1 and 9999 inclusive.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.MaxHeight">
            <summary>
            phrase: Max height
            </summary>
            <value>Max height</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.MaxWidthRequired">
            <summary>
            phrase: Max width is required
            </summary>
            <value>Max width is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.MaxHeightRequired">
            <summary>
            phrase: Max height is required
            </summary>
            <value>Max height is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Width">
            <summary>
            word: Width
            </summary>
            <value>Width</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WidthRequired">
            <summary>
            phrase: Width is required
            </summary>
            <value>Width is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Height">
            <summary>
            word: Height
            </summary>
            <value>Height</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.HeightRequired">
            <summary>
            phrase: Height is required
            </summary>
            <value>Height is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ResizeSmallerToBigger">
            <summary>
            phrase: Resize smaller images to bigger dimensions
            </summary>
            <value>Resize smaller images to bigger dimensions</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Quality">
            <summary>
            word: Quality
            </summary>
            <value>Quality</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Dimensions">
            <summary>
            phrase: Dimensions:
            </summary>
            <value>Dimensions:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ModifiedOn">
            <summary>
            phrase: Date modified:
            </summary>
            <value>Date modified:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Style">
            <summary>
            word: Style
            </summary>
            <value>Style</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectStyle">
            <summary>
            phrase: - Select -
            </summary>
            <value>- Select -</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectImageFromComputer">
            <summary>
            phrase: Select image from your computer
            </summary>
            <value>Select image from your computer</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoImages">
            <summary>
            phrase: No images
            </summary>
            <value>No images</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AlreadyUploadedImages">
            <summary>
            phrase: Already uploaded images
            </summary>
            <value>Already uploaded images</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ListSelectorHeader">
            <summary>
            phrase: Select lists
            </summary>
            <value>Select lists</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.NoVideos">
            <summary>
            phrase: No videos
            </summary>
            <value>No videos</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.UploadVideo">
            <summary>
            phrase: Upload video
            </summary>
            <value>Upload video</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AlreadyUploadedVideos">
            <summary>
            phrase: Already uploaded videos
            </summary>
            <value>Already uploaded videos</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.VideoSingular">
            <summary>
            word: Video
            </summary>
            <value>Video</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.VideoPlural">
            <summary>
            word: Videos
            </summary>
            <value>Videos</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectVideoFromComputer">
            <summary>
            word: Select video from your computer
            </summary>
            <value>Select video from your computer</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.InsertVideoLink">
            <summary>
            phrase: Insert a video
            </summary>
            <value>Insert a video</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.AspectRatio">
            <summary>
            phrase: Aspect ratio
            </summary>
            <value>Aspect ratio</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.VideoHasBeenDeleted">
            <summary>
            phrase: The video has been deleted or unpublished
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Auto">
            <summary>
            word: Auto
            </summary>
            <value>Auto</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.ChangeVideo">
            <summary>
            phrase: Change video
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Ratio4X3">
            <summary>
            word: 4x3
            </summary>
            <value>4x3</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectVideo">
            <summary>
            phrase: Select video
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Ratio16X9">
            <summary>
            word: 16x9
            </summary>
            <value>16x9</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.VideoToUpload">
            <summary>
            phrase: Video to upload
            </summary>
            <value>Video to upload</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.WhereToStoreVideo">
            <summary>
            phrase: Where to store video
            </summary>
            <value>Where to store video</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.RecentVideos">
            <summary>
            phrase: Recent videos
            </summary>
            <value>Recent videos</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.MyVideos">
            <summary>
            phrase: My videos
            </summary>
            <value>My videos</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.FolderSingular">
            <summary>
            word: Folder
            </summary>
            <value>Folder</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.FolderPlural">
            <summary>
            word: Folders
            </summary>
            <value>Folders</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.MoreOptions">
            <summary>
            phrase: More options
            </summary>
            <value>More options</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Custom">
            <summary>
            word: Custom
            </summary>
            <value>Custom</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.PixelShort">
            <summary>
            word: px
            </summary>
            <value>px</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last1Day">
            <summary>
            phrase: Last 1 day
            </summary>
            <value>Last 1 day</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last3Days">
            <summary>
            phrase: Last 3 days
            </summary>
            <value>Last 3 days</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last1Week">
            <summary>
            phrase: Last 1 week
            </summary>
            <value>Last 1 week</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last1Month">
            <summary>
            phrase: Last 1 month
            </summary>
            <value>Last 1 month</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last6Months">
            <summary>
            phrase: Last 6 months
            </summary>
            <value>Last 6 months</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last1Year">
            <summary>
            phrase: Last 1 year
            </summary>
            <value>Last 1 year</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last2Years">
            <summary>
            phrase: Last 2 years
            </summary>
            <value>Last 2 years</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.Last5Years">
            <summary>
            phrase: Last 5 years
            </summary>
            <value>Last 5 years</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectBlogs">
            <summary>
            phrase: Select blogs
            </summary>
            <value>Select blogs</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.SelectBlogPosts">
            <summary>
            phrase: Select blog posts
            </summary>
            <value>Select blog posts</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.ClientComponentsResources.UserSelectorHeader">
            <summary>
            phrase: Select a user
            </summary>
            <value>Select a user</value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Notifications.EmailTemplateHelper">
            <summary>
            This class contains helpers for working with email templates.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Notifications.EmailTemplateHelper.GetEmailTemplates(System.String)">
            <summary>
            Gets the email templates.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.ControllerMetadataAttribute">
            <summary>
            Controller attribute for determining whether the controller is templatable control
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.ControllerMetadataAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.ControllerMetadataAttribute"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.ControllerMetadataAttribute.IsTemplatableControl">
            <summary>
            Gets or sets a value indicating whether the controller is templatable control
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Controllers.ContentPagerController">
            <summary>
            This class represents controller for pager widget.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Controllers.ContentPagerController.Index(System.Int32,System.Int32,System.String)">
            <summary>
            Returns view with pager.
            </summary>
            <param name="currentPage">The current page.</param>
            <param name="totalPagesCount">The total pages count.</param>
            <param name="redirectUrlTemplate">The template of the URL used for redirecting.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.CustomFieldsHelpers">
            <summary>
            This class contains helpers for working with custom fields.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.CustomFieldsHelpers.GetTaxonomyFields(System.Type)">
            <summary>
            Gets the custom taxonomy fields.
            </summary>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.CustomFieldsHelpers.GetClassificationPluralTitle(System.Guid)">
            <summary>
            Gets the classification plural title.
            </summary>
            <param name="taxaId">The taxa identifier.</param>
            <returns></returns>
        </member>
        <member name="T:ASP.PartialExtensions">
            <summary>
            <see cref="T:System.Web.Mvc.HtmlHelper"/> extensions methods for rendering partial views.
            </summary>
        </member>
        <member name="M:ASP.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Renders the partial view with the specified name.
            </summary>
            <param name="htmlHelper">The HTML helper.</param>
            <param name="partialViewName">Name of the partial view.</param>
            <returns>Rendered partial view.</returns>
        </member>
        <member name="M:ASP.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Renders the partial view with the specified name.
            </summary>
            <param name="htmlHelper">The HTML helper.</param>
            <param name="partialViewName">Name of the partial view.</param>
            <param name="viewData">The view data.</param>
            <returns>
            Rendered partial view.
            </returns>
        </member>
        <member name="M:ASP.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Renders the partial view with the specified name.
            </summary>
            <param name="htmlHelper">The HTML helper.</param>
            <param name="partialViewName">Name of the partial view.</param>
            <param name="model">The model.</param>
            <returns>
            Rendered partial view.
            </returns>
        </member>
        <member name="M:ASP.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Renders the partial view with the specified name.
            </summary>
            <param name="htmlHelper">The HTML helper.</param>
            <param name="partialViewName">Name of the partial view.</param>
            <param name="model">The model.</param>
            <param name="viewData">The view data.</param>
            <returns>
            Rendered partial view.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.HyperLinkHelpers">
            <summary>
            Helper class that provides utility methods for resolving urls to a content pages.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.HyperLinkHelpers.GetDetailPageUrl(Telerik.Sitefinity.Model.IDataItem,System.Guid)">
            <summary>
            Returns an absolute URL to a content item's details page.
            </summary>
            <param name="item">The item.</param>
            <param name="detailsPageId">The details page id.</param>
            <returns>The absolute url of the details page.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.HyperLinkHelpers.GetDetailPageUrl(Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel,System.Guid,System.Boolean)">
            <summary>
            Gets the detail page URL for master/detail widgets.
            </summary>
            <param name="item">The item.</param>
            <param name="detailsPageId">The details page identifier.</param>
            <param name="openInSamePage">if set to <c>true</c> [open in same page].</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.HyperLinkHelpers.GetDetailPageUrl(Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Gets the detail page URL for master/detail widgets.
            </summary>
            <param name="item">The item.</param>
            <param name="detailsPageId">The details page identifier.</param>
            <param name="openInSamePage">if set to <c>true</c> [open in same page].</param>
            <param name="itemIndex">Index of the item in collection.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.HyperLinkHelpers.GetFullPageUrl(System.Guid)">
            <summary>
            Gets the full page URL.
            </summary>
            <param name="pageId">The page identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper">
            <summary>
            This class contains helper methods for registering client resources.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.Script(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Registers JavaScript reference and ensures that it loads maximum once for a page.
            </summary>
            <param name="helper">The helper.</param>
            <param name="scriptPath">The path to the JavaScript file.</param>
            <returns>
            MvcHtmlString
            </returns>
            <remarks>
            This method uses directly the resource from the <see cref="!:scriptPath"/>.
            In case you want to use embedded scripts from Sitefinity check <see cref="!:ResourceHelper.Script(this HtmlHelper helper, ScriptRef scriptReference, bool throwException = false)"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.Script(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Registers JavaScript reference and ensures that it loads maximum once for a page.
            </summary>
            <param name="helper">The helper.</param>
            <param name="scriptPath">The path to the JavaScript file.</param>
            <param name="sectionName">The name of the section that will render this script. If null it will render on the same place of the page</param>
            <returns>
            MvcHtmlString
            </returns>
            <remarks>
            This method uses directly the resource from the <see cref="!:scriptPath"/>.
            In case you want to use embedded scripts from Sitefinity check <see cref="!:ResourceHelper.Script(this HtmlHelper helper, ScriptRef scriptReference, bool throwException = false)"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.Script(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Boolean)">
            <summary>
            Registers JavaScript reference and ensures that it loads maximum once for a page.
            </summary>
            <param name="helper">The helper.</param>
            <param name="scriptPath">The path to the JavaScript file.</param>
            <param name="sectionName">The name of the section that will render this script. If null it will render on the same place of the page</param>
            <param name="throwException">Indicates whether to throw an exception if the specified section does not exist.</param>
            <returns>
            MvcHtmlString
            </returns>
            <remarks>
            This method uses directly the resource from the <see cref="!:scriptPath"/>.
            In case you want to use embedded scripts from Sitefinity check <see cref="!:ResourceHelper.Script(this HtmlHelper helper, ScriptRef scriptReference, bool throwException = false)"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.Script(System.Web.Mvc.HtmlHelper,Telerik.Sitefinity.Modules.Pages.ScriptRef)">
            <summary>
            Registers JavaScript reference and ensures that it loads maximum once for a page.
            </summary>
            <remarks>
            This helper references the same resource existing in Sitefinity.
            </remarks>
            <param name="helper">The helper.</param>
            <param name="scriptReference">The script reference.</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.Script(System.Web.Mvc.HtmlHelper,Telerik.Sitefinity.Modules.Pages.ScriptRef,System.String)">
            <summary>
            Registers JavaScript reference and ensures that it loads maximum once for a page.
            </summary>
            <remarks>
            This helper references the same resource existing in Sitefinity.
            </remarks>
            <param name="helper">The helper.</param>
            <param name="scriptReference">The script reference.</param>
            <param name="sectionName">The name of the section that will render this script. If null it will render on the same place of the page</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.Script(System.Web.Mvc.HtmlHelper,Telerik.Sitefinity.Modules.Pages.ScriptRef,System.String,System.Boolean)">
            <summary>
            Registers JavaScript reference and ensures that it loads maximum once for a page.
            </summary>
            <remarks>
            This helper references the same resource existing in Sitefinity.
            </remarks>
            <param name="helper">The helper.</param>
            <param name="scriptReference">The script reference.</param>
            <param name="sectionName">The name of the section that will render this script. If null it will render on the same place of the page</param>
            <param name="throwException">Indicates whether to throw an exception if the specified section does not exist.</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.StyleSheet(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Registers style sheet reference and ensures that it loads maximum once for a page.
            </summary>
            <param name="helper">The helper.</param>
            <param name="resourcePath">The path to the CSS file.</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.StyleSheet(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Registers style sheet reference and ensures that it loads maximum once for a page.
            </summary>
            <param name="helper">The helper.</param>
            <param name="resourcePath">The path to the CSS file.</param>
            <param name="sectionName">The name of the section that will render this script. If null it will render on the same place of the page</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.StyleSheet(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Boolean)">
            <summary>
            Registers style sheet reference and ensures that it loads maximum once for a page.
            </summary>
            <param name="helper">The helper.</param>
            <param name="resourcePath">The path to the CSS file.</param>
            <param name="sectionName">The name of the section that will render this script. If null it will render on the same place of the page</param>
            <param name="throwException">Indicates whether to throw an exception if the specified section does not exist.</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.QueryBuilderScriptReferences(System.Web.Mvc.HtmlHelper)">
            <summary>
            Adds script references required by the Sitefinity's QueryBuilder component.
            </summary>
            <param name="helper">The helper.</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.CodeMirrorScriptReferences(System.Web.Mvc.HtmlHelper)">
            <summary>
            Adds script references required by the Sitefinity's CodeMirror component.
            </summary>
            <param name="helper">The helper.</param>
            <returns>
            MvcHtmlString
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.GetWebResourceUrl(Telerik.Sitefinity.Modules.Pages.ScriptRef)">
            <summary>
            Gets the web resource URL.
            </summary>
            <param name="scriptReference">The script reference.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.RenderAllScripts(System.Web.HttpContextBase,System.String)">
            <summary>
            Renders all scripts.
            </summary>
            <param name="context">The context.</param>
            <param name="sectionName">The section name.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.RenderAllStylesheets(System.Web.HttpContextBase,System.String)">
            <summary>
            Renders all stylesheets.
            </summary>
            <param name="context">The context.</param>
            <param name="sectionName">The section name.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.TryConfigureScriptManager(Telerik.Sitefinity.Modules.Pages.ScriptRef,System.Web.IHttpHandler)">
            <summary>
            Tries the configure script manager.
            </summary>
            <param name="scriptReference">The script reference.</param>
            <param name="httpHandler">The httpHandler.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.TryConfigureScriptManager(System.String,System.Web.IHttpHandler)">
            <summary>
            Tries the configure script manager.
            </summary>
            <param name="scriptReference">The script reference.</param>
            <param name="httpHandler">The httpHandler.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ResourceHelper.ResourceType">
            <summary>
            This enum represents supported resource types.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityContext">
            <summary>
            This class creates helper which provides commonly used data to the Mvc views. 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityContext.Page">
            <summary>
            Gets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityContext.Site">
            <summary>
            Gets the site.
            </summary>
            <value>
            The site.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityContext.Profile">
            <summary>
            Gets the profile.
            </summary>
            <value>
            The profile.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityContext.IsBackend">
            <summary>
            Determines whether this method is invoked from Sitefinity's backend.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityContext.IsPreviewMode">
            <summary>
            Determines whether this method is invoked from Sitefinity's preview mode.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityContext.FrontendLoginUrl">
            <summary>
            Gets the frontend login URL for the current site as configured in the backend.
            </summary>
            <value>
            The frontend login URL.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityHelper">
            <summary>
            This class contains basic helper method used in Feather.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.SitefinityHelper.Sitefinity(System.Web.Mvc.HtmlHelper)">
            <summary>
            Wrapper helper for Sitefinity.
            </summary>
            <param name="helper">The helper.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.CustomTaxonomyViewModel">
            <summary>
            This class represents the view model for the custom taxonomy fields.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.CustomTaxonomyViewModel.Name">
            <summary>
            Gets or sets the name of the custom field.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.CustomTaxonomyViewModel.Title">
            <summary>
            Gets or sets the title of the taxonomy.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.CustomTaxonomyViewModel.TaxonomyType">
            <summary>
            Gets or sets the type of the taxonomy.
            </summary>
            <value>
            The type of the taxonomy.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.CustomTaxonomyViewModel.Id">
            <summary>
            Gets or sets the identifier of the taxonomy.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel">
            <summary>
            This class represents the view model for the pagers.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel"/> class.
            </summary>
            <param name="currentPage">The current page.</param>
            <param name="totalPagesCount">The total pages count.</param>
            <param name="redirectUrlTemplate">The redirect URL template.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.#ctor(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel"/> class.
            </summary>
            <param name="currentPage">The current page.</param>
            <param name="totalPagesCount">The total pages count.</param>
            <param name="redirectUrlTemplate">The redirect URL template.</param>
            <param name="redirectUrlTemplate">The amount of page nodes to render</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.CurrentPage">
            <summary>
            Gets or sets the current page.
            </summary>
            <value>
            The current page.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.TotalPagesCount">
            <summary>
            Gets or sets the total pages count.
            </summary>
            <value>
            The total pages count.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.DisplayCount">
            <summary>
            Gets or sets the total item count to render.
            </summary>
            <value>
            The total numbers that will render.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.RedirectUrlTemplate">
            <summary>
            Gets or sets the redirect URL template.
            </summary>
            <value>
            The redirect URL template.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.PagerNodes">
            <summary>
            Gets or sets the pager node
            </summary>
            <value>
            The amount of nodes to render
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.PreviousNode">
            <summary>
            Gets or sets the previous node
            </summary>
            <value>
            The previous page
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PagerViewModel.NextNode">
            <summary>
            Gets or sets the next node
            </summary>
            <value>
            The next page
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewSelectorHelpers">
            <summary>
            Helper methods for collecting all available views.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewSelectorHelpers.GetViewNames(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Gets a collection with the view names which match the given pattern.
            </summary>
            <param name="helper">The helper.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="templateNamePattern">The template name pattern.</param>
            <returns>Names of the views that match provided pattern.</returns>
            <exception cref="T:System.ArgumentException">Controller cannot be resolved.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewSelectorHelpers.GetViewNames(System.Web.Mvc.HtmlHelper,System.Web.Mvc.Controller,System.String)">
            <summary>
            Gets a collection with the view names which match the given pattern.
            </summary>
            <param name="helper">The helper.</param>
            <param name="controller">The controller.</param>
            <param name="templateNamePattern">The template name pattern.</param>
            <returns>Names of the views that match provided pattern.</returns>
            <exception cref="T:System.ArgumentException">Controller cannot be resolved.</exception>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.CacheDependentAttribute">
            <summary>
            This class represents an action filter that makes sure if a ViewResult is executed the View file has its cache dependency added to the response.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.CacheDependentAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>
            Called by the ASP.NET MVC framework after the action result executes.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.CacheDependentAttribute.GetCacheDependency(System.String)">
            <summary>
            Gets the cache dependency for the given virtual path.
            </summary>
            <param name="virtualPath">The virtual path.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.ControllerContainerAttribute">
            <summary>
            This attribute is used to mark assemblies that may contain <see cref="!:IController"/> types.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.EnhanceViewEnginesAttribute">
            <summary>
            This attribute defines how a view engine paths are enhanced by the controller factory for the marked <see cref="!:Controller"/>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.EnhanceViewEnginesAttribute.Disabled">
            <summary>
            Gets or sets a value indicating whether view engines should be enhanced.
            </summary>
            <value>
              <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.EnhanceViewEnginesAttribute.VirtualPath">
            <summary>
            Gets or sets the virtual path that contains the Views folder with the controller views.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.InlineEditing.Attributes.FieldInfoAttribute">
            <summary>
            This class is used as attribute which specifies the meta data required to enable inlineEditing for the field
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.Attributes.FieldInfoAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.InlineEditing.Attributes.FieldInfoAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.InlineEditing.Attributes.FieldInfoAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.InlineEditing.Attributes.FieldInfoAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.InlineEditing.Attributes.FieldInfoAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.InlineEditing.Attributes.FieldInfoAttribute.FieldType">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Designers.DesignerInitializer">
            <summary>
            This class contains logic for initializing the MVC designer.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Designers.DesignerInitializer.Initialize">
            <summary>
            Initializes the MVC designer.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Designers.DesignerInitializer.RegisteringScriptsHandler(Telerik.Sitefinity.Web.UI.IScriptsRegisteringEvent)">
            <summary>
            Registering the scripts for ZoneEditor.
            </summary>
            <param name="event">The event.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.RequestBackendUserAuthenticationAttribute">
            <summary>
            Actions marked with this attribute will require backend user authentication in order to execute.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.RequestBackendUserAuthenticationAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Called by the ASP.NET MVC framework before the action method executes.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions">
            <summary>
            Provides extension methods for MVC controllers.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.UpdateViewEnginesCollection(System.Web.Mvc.Controller,System.Collections.Generic.IList{System.Func{System.String,System.String}})">
            <summary>
            Updates the view engines collection of the given <paramref name="controller"/> by making the engines aware of the controller's container virtual path.
            </summary>
            <param name="controller">The controller.</param>
            <exception cref="T:System.ArgumentNullException">controller</exception>
            <param name="pathTransformations">Transformations that have to be applied to each view engine search path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetPartialViews(System.Web.Mvc.Controller)">
            <summary>
            Gets the partial views that are available to the controller.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetViews(System.Web.Mvc.Controller)">
            <summary>
            Gets the views that are available to the controller.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.AddCacheDependencies(System.Web.Mvc.Controller,System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Data.CacheDependencyKey})">
            <summary>
            Adds cache dependencies for the current response.
            </summary>
            <param name="controller">The controller.</param>
            <param name="keys">The cache dependency keys to be added.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetPartialViewLocations(System.Web.Mvc.Controller)">
            <summary>
            Gets the partial view paths of the given controller.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetCurrentPageUrl(System.Web.Mvc.IController)">
            <summary>
            Gets the URL of the current page.
            </summary>
            <param name="controller">The controller.</param>
            <returns>URL of the currents page without a trailing slash.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetDynamicContentType(System.Web.Mvc.ControllerBase)">
            <summary>
            Gets the type of the dynamic content that is inferred for the given controller.
            </summary>
            <param name="controller">The controller.</param>
            <returns>The dynamic module type.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetDynamicContentType(System.Web.Mvc.ControllerBase,System.String)">
            <summary>
            Gets the type of the dynamic content that is inferred for the given controller.
            </summary>
            <param name="controller">The controller.</param>
            <param name="controllerName">Name of the controller.</param>
            <returns>
            The dynamic module type.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetDynamicContentType(System.String)">
            <summary>
            Gets the type of the dynamic content that is inferred for the given controller name.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <returns>
            The dynamic module type.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetViewEngine(System.Web.Mvc.VirtualPathProviderViewEngine,System.Collections.Generic.IList{System.Func{System.String,System.String}})">
            <summary>
            Gets a view engine that is a clone of the given <paramref name="viewEngine"/> and has enhanced search locations.
            </summary>
            <param name="viewEngine">The view engine.</param>
            <param name="pathTransformations">Transformations that have to be applied to each view engine search path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetViewLocations(System.Web.Mvc.Controller)">
            <summary>
            Gets the view paths of the given controller.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerExtensions.GetViewFileExtensions(System.Web.Mvc.Controller)">
            <summary>
            Gets the file extensions that this controller will recognize when resolving view templates.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.GridSystem.GridControl">
            <summary>
            The LayoutControl comprises the basic building block of Sitefinity layouts. GridControl adds the ability to use pure HTML templates.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridControl.GetTemplate">
            <summary>
            Gets the template based on the Layout property that will be instantiated inside the control.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridControl.ProcessLayoutString(System.String,System.Boolean)">
            <summary>
            Makes sure that the system containers are runat="server" so the layout declaration can be used as a proper container.
            </summary>
            <param name="targetTemplate">The template.</param>
            <param name="ensureSfColsWrapper">if set to <c>true</c> ensures sf_cols containers exists in the template.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridControl.GetTemplate(System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets the template.
            </summary>
            <param name="isVirtualPath">The is virtual path.</param>
            <param name="isHtmlTemplate">The is HTML template.</param>
            <param name="layout">The layout.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.GridSystem.GridControl.GetAttributeValue(Telerik.Sitefinity.Utilities.HtmlParsing.HtmlChunk,System.String)">
            <summary>
            Gets the value of a given attribute by its name.
            </summary>
            <param name="chunk">The HTML chunk.</param>
            <param name="attributeName">Name of the attribute.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData">
            <summary>
            This class represent file data persisted by the file monitoring functionality. 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData.PackageName">
            <summary>
            Gets or sets the name of the package.
            </summary>
            <value>
            The name of the package.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager">
            <summary>
            Represents the data manager for the file monitoring functionality.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager"/> class.
            </summary>
            <param name="providerName">Name of the provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager"/> class.
            </summary>
            <param name="providerName">
            The name of the provider. If empty string or null the default provider is set
            </param>
            <param name="transactionName">
            The name of a distributed transaction. If empty string or null this manager will use separate transaction.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.GetManager">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.GetManager(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.GetManager(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.CreateFileData">
            <summary>
            Creates the file data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.CreateFileData(System.Guid)">
            <summary>
            Creates the file data.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.GetFileData(System.Guid)">
            <summary>
            Gets the file data.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.Delete(Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData)">
            <summary>
            Deletes the specified file data to delete.
            </summary>
            <param name="fileDataToDelete">The file data to delete.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.ModuleName">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.DefaultProviderDelegate">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager.ProvidersSettings">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider">
            <summary>
            Represents the data provider for the file monitoring functionality.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.GetKnownTypes">
            <summary>
            Gets the known types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.CreateFileData">
            <summary>
            Creates the file data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.CreateFileData(System.Guid)">
            <summary>
            Creates the file data.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.GetFileData(System.Guid)">
            <summary>
            Gets the file data.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.GetFilesData">
            <summary>
            Gets the files data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.Delete(Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData)">
            <summary>
            Deletes the specified file data.
            </summary>
            <param name="fileDataToDelete">The file data to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.CreateItem(System.Type,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.GetItem(System.Type,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.GetItemOrDefault(System.Type,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.GetItems(System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.DeleteItem(System.Object)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider.RootKey">
            <summary>
            Gets a unique key for each data provider base.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMapping">
            <summary>
            A concrete implementation of the <see cref="T:Telerik.Sitefinity.OpenAccessFluentMappingBase"/> for the file monitoring.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMapping.GetMapping">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMapping.MapFileData(System.Collections.Generic.List{Telerik.OpenAccess.Metadata.Fluent.MappingConfiguration})">
            <summary>
            Maps the file data.
            </summary>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMetadataSource">
            <summary>
            A concrete implementation of the <see cref="T:Telerik.Sitefinity.Data.OA.SitefinityMetadataSourceBase"/> for the file monitoring.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMetadataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMetadataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMetadataSource.#ctor(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMetadataSource"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorFluentMetadataSource.BuildCustomMappings">
            <summary>
            Builds the custom mappings.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider">
            <summary>
            OpenAccess implementation of the <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataProvider"/>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.OnUpgrading(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.OnUpgraded(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.GetMetaDataSource(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.CreateFileData">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.CreateFileData(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.GetFileData(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.GetFilesData">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.Delete(Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.CurrentSchemaVersionNumber">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.Data.OpenAccessFileMonitorDataProvider.Context">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Designers.DesignerResolver">
            <summary>
            This class contains logic for resolving the designer responsible for the property editing of a widget.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Designers.DesignerResolver.GetUrl(System.Type)">
            <summary>
            Gets the widget designer URL based on the widget type. 
            If there is a record in the <see cref="!:DesignerResolver.Registry"/> for this widget type it would be retrieved with biggest priority.
            Otherwise the URL specified by <see cref="!:Telerik.Sitefinity.Frontend.Designer.DesignerUrlAttribute"/> will be retrieved.
            If the URL is not specified explicitly for a MVC widget this method will retrieve the default designer <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Controllers.DesignerController"/>.
            If null then the default property editor URL should be used.
            </summary>
            <param name="widgetType">Type of the widget.</param>
            <exception cref="T:System.ArgumentNullException">widgetType</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Designers.DesignerResolver.TryResolveUrlFromAttribute(System.Type,System.String@)">
            <summary>
            Resolve a designer URL for the specified widget type if such is specified with <see cref="T:Telerik.Sitefinity.Frontend.Designers.DesignerUrlAttribute"/>.
            </summary>
            <param name="widgetType">Type of the widget.</param>
            <param name="designerUrl">The designer URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Designers.DesignerResolver.GetDefaultUrl(System.Type)">
            <summary>
            Gets the default designer URL.
            </summary>
            <param name="widgetType">Type of the widget.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager">
            <summary>
            This class manages the behavior when a layout file is moved over the application folder structure.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.FileAdded(System.String,System.String,System.String)">
            <summary>
            Process the file if such is added to the existing folder.
            </summary>
            <param name="virtualFilePath">The virtual file path.</param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.FileDeleted(System.String,System.String)">
            <summary>
            Called on file deletion
            </summary>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.FileRenamed(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Reacts on file renaming
            </summary>
            <param name="newFileName">New name of the file.</param>
            <param name="oldFileName">Old name of the file.</param>
            <param name="newFilePath"></param>
            <param name="oldFilePath"></param>
            <param name="packageName">Name of the package.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.IsFileInValidFolder(System.String,System.String)">
            <summary>
            Determines whether a file exists on the specified location and whether it is applicable for the current application.
            </summary>
            <remarks>
            Valid locations depends on the values inside the <see cref="P:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.FolderPathStructure"/>.
            </remarks>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
            <returns>true if the file exists and is placed under the application root in a folder [package]/Mvc/Views/Layouts.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.CreateTemplateAndFileData(System.String,System.String,System.String,Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileMonitorDataManager,Telerik.Sitefinity.Frontend.FilesMonitoring.Data.FileData)">
            <summary>
            Creates the template and file data.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="filePath">The file path.</param>
            <param name="packageName">Name of the package.</param>
            <param name="fileMonitorDataManager">The file monitor data manager.</param>
            <param name="fileData">The file data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.GetViewExtensions">
            <summary>
            Gets the allowed views extensions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.CreateTemplate(System.String)">
            <summary>
            Creates the page template.
            </summary>
            <param name="templateTitle">The template title.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.LayoutFileManager.FolderPathStructure">
            <summary>
            Gets the required folder path structure. Only layout files placed inside the specified folder structure will trigger automatic creation of the templates.
            </summary>
            <value>
            The folder path structure.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor">
            <summary>
             This class manages the file monitoring and is responsible to fire events on changes in the observed file structure.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.IFileMonitor">
            <summary>
            Classes that implement this interface must observe the resource locations, watch for changes 
            and take certain actions depending on the change.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.IFileMonitor.Start(System.Collections.Generic.IList{Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory})">
            <summary>
            Starts this instance.
            </summary>
            <param name="directoriesInfo">The directories information.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.Start(System.Collections.Generic.IList{Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory})">
            <summary>
            Observes the resources locations, watch for changes
            and take certain actions depending on the change
            </summary>
            <param name="directoriesInfo">The monitored directories.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.FileChanged(System.String,Telerik.Sitefinity.Frontend.FilesMonitoring.FileChangeType,System.String)">
            <summary>
            Takes appropriate actions based on the resource file type
            </summary>
            <param name="path">The file path.</param>
            <param name="changeType">Type of the change.</param>
            <param name="oldFilePath">The old file path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.RemoveNonExistingData">
            <summary>
            Removes the non existing files data.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.GetResourceFileManager(System.String,System.String)">
            <summary>
            Gets the resource file manager.
            </summary>
            <param name="resourceType">Type of the resource.</param>
            <returns>FileManager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.GetResourceType(System.String,System.String)">
            <summary>
            Gets the type of the resource.
            </summary>
            <param name="resourceFolder">The resource folder.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.GetApplicationPhysicalPath">
            <summary>
            Gets the physical path of the application.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.MapPath(System.String)">
            <summary>
            Maps the virtual path to physical path.
            </summary>
            <param name="virtualPath">The virtual Path.</param>
            <returns>The physical path on the server specified by virtualPath.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.AddRootWatcher">
            <summary>
            Adds the root watcher.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.AddFileWatcher(Telerik.Sitefinity.Frontend.FilesMonitoring.MonitoredDirectory)">
            <summary>
            Adds the file watcher.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.RemoveFileWatcher(System.String)">
            <summary>
            Removes the file watcher.
            </summary>
            <param name="queuedDirInfoKey">The queued dir information key.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.ConvertToVirtualPath(System.String)">
            <summary>
            Converts to virtual path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.ProcessDirecotryFiles(System.IO.DirectoryInfo)">
            <summary>
            Processes all files under a directory, including subfolders.
            </summary>
            <param name="dirInfo">The directory information.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.OnRootRenamed(System.Object,System.IO.RenamedEventArgs)">
            <summary>
            Called when root directory is renamed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.IO.RenamedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.OnRootCreated(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Called when root directory is created.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.IO.FileSystemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.OnRootDeleted(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Called when root directory is deleted.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.IO.FileSystemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.OnFileRenamed(System.Object,System.IO.RenamedEventArgs)">
            <summary>
            Called when a file is renamed.
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:System.IO.RenamedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.OnFileCreated(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Called when a file is created.
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:System.IO.FileSystemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.OnFileDeleted(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Called when a file is deleted.
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:System.IO.FileSystemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.QueueWatch(System.String)">
            <summary>
            Queues the watch action for certain directory.
            </summary>
            <param name="directoryPath">The directory path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.StartWatch(System.String)">
            <summary>
            Starts the watch action for certain directory.
            </summary>
            <param name="directoryPath">The directory path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.GetFileChangedDelegate(Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.FileChangedDelegateArguments)">
            <summary>
            Gets the file changed delegate. It will call the appropriate methods of <see cref="T:Telerik.Sitefinity.Frontend.FilesMonitoring.IFileManager"/> when the file structure has changed. 
            </summary>
            <param name="args">The arguments.</param>
            <returns>RunWithElevatedPrivilegeDelegate</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.WatchedFoldersAndPackages">
            <summary>
            Gets the watched folders and packages.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.QueuedFoldersAndPackages">
            <summary>
            Gets the queued folders and packages.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.FileWatchers">
            <summary>
            Gets the file watchers.
            </summary>
            <value>
            The file watchers.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.FileMonitor.FileChangedDelegateArguments">
            <summary>
            This class represents the arguments for invoking the  GetFileChangedDelegate method.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.InlineEditingHtmlHelpers">
            <summary>
            HTML helper methods which makes the InlineEiting possible
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.InlineEditingHtmlHelpers.TextField(System.Web.Mvc.HtmlHelper,System.Object,System.String)">
            <summary>
            HTML helper which adds the meta data required by InlineEditing.
            </summary>
            <param name="helper">The helper.</param>
            <param name="model">The object which contains the property.</param>
            <param name="propName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.InlineEditingHtmlHelpers.TextField(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            HTML helper which adds the meta data required by InlineEditing.
            </summary>
            <param name="helper">The helper.</param>
            <param name="propName">Name of the property.</param>
            <param name="propValue">The property value.</param>
            <param name="fieldType">Type of the field.</param>
            <returns>Html required for enabling inline editing.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.InlineEditingHtmlHelpers.InlineEditingRegion(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Guid)">
            <summary>
            HTML helper which adds an InlineEditing region. This should be added once at the top of the page, and the whole region will support InlineEditing.
            </summary>
            <param name="htmlHelper">The HTML helper.</param>
            <param name="providerName">Name of the provider.</param>
            <param name="type">The type.</param>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.InlineEditingHtmlHelpers.InlineEditingAttributes(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Guid)">
            <summary>
            Renders InlineEditing attributes required for the Inline editing feature.
            </summary>
            <param name="providerName">Name of the provider.</param>
            <param name="type">The type.</param>
            <param name="id">The identifier.</param>
            <returns>The inline editing attributes.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.InlineEditingHtmlHelpers.InlineEditingFieldAttributes(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Renders InlineEditing attributes for fields required for the Inline editing feature.
            </summary>
            <param name="htmlHelper">The HTML helper.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="fieldType">Type of the field.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerModelFactory">
            <summary>
            This class is used for models creation.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerModelFactory.GetModel``1(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the model instance.
            </summary>
            <typeparam name="T">Type of the model.</typeparam>
            <param name="controllerType">The type of the controller for which the model is being resolved.</param>
            <param name="constructorParameters">The constructor parameters.</param>
            <returns>The model instance.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.IRouteMapper">
            <summary>
            Classes that implement this interface can provide custom routing logic.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.IRouteMapper.TryMapRouteParameters(System.String[],System.Web.Routing.RequestContext)">
            <summary>
            Maps the route parameters from URL and returns true of the URL is a valid route.
            </summary>
            <param name="urlParams">The URL parameters.</param>
            <param name="requestContext">The request context.</param>
            <returns>True if the URL is a valid route. False otherwise.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.MvcWidgetProxy">
            <summary>
            Web forms control that is used as a proxy for MVC controllers and has information about the specific widget it is used for.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.MvcWidgetProxy.WidgetName">
            <summary>
            Gets or sets the name of the widget.
            </summary>
            <value>The name of the widget.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.MvcWidgetProxy.Controller">
            <summary>
            Gets or sets the instance of <see cref="!:SitefinityController"/> that
            is being proxied.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.InfrastructureResources">
            <summary>
            Localizable strings for the Frontend infrastructure.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.InfrastructureResources.InfrastructureResourcesTitle">
            <summary>
            Title for the infrastructure resources class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.InfrastructureResources.InfrastructureResourcesDescription">
            <summary>
            Description for the infrastructure resources class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.InfrastructureResources.ErrorExecutingController">
            <summary>
            Message that is to be displayed for a widget when its controller execution throws exception.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutMvcPageResolver">
            <summary>
            Instances of this class render virtual page files for pure MVC pages that can be based on a layout file.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutMvcPageResolver.IsLayoutPath(System.String)">
            <summary>
            Determines whether the specified virtual path is path of a layout file.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>True if the specified virtual path is path of a layout file.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutMvcPageResolver.BuildWithMasterPage(System.String,System.Web.Routing.RequestContext,System.Text.StringBuilder,Telerik.Sitefinity.Abstractions.VirtualPath.CursorCollection,Telerik.Sitefinity.Abstractions.VirtualPath.DirectiveCollection)">
            <summary>
            Appends markup to the virtual page file depending on the current master page.
            </summary>
            <param name="virtualPath">The master page virtual path.</param>
            <param name="context">The context.</param>
            <param name="output">The output.</param>
            <param name="placeHolders">The place holders.</param>
            <param name="directives">The directives.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutMvcPageResolver.AppendLayout(System.String,System.String,Telerik.Sitefinity.Abstractions.VirtualPath.PlaceHolderCursor,Telerik.Sitefinity.Abstractions.VirtualPath.CursorCollection,System.String,Telerik.Sitefinity.Abstractions.VirtualPath.DirectiveCollection)">
            <summary>
            Appends the layout.
            </summary>
            <remarks>
            If the layout is not found error message will be rendered instead.
            </remarks>
            <param name="layoutTemplate">The layout template.</param>
            <param name="assemblyInfo">The assembly information.</param>
            <param name="parentPlaceHolder">The parent place holder.</param>
            <param name="placeHolders">The place holders.</param>
            <param name="layoutId">The layout identifier.</param>
            <param name="directives">The directives.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.PageTemplateExtensions">
            <summary>
            This class contains extension methods for the IPageTemplate.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.PageTemplateExtensions.GetTemplateFramework(Telerik.Sitefinity.Pages.Model.IPageTemplate)">
            <summary>
            Gets the template framework.
            </summary>
            <param name="template">The template.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutInitializer">
            <summary>
            This class contains logic for registration and initialization of the layouts.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutInitializer.Initialize">
            <summary>
            Registers the types and resolvers related to the layouts functionality.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutResolver">
            <summary>
            This class is responsible for the operations concerning the resolving of the layout pages.  
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutResolver.GetVirtualPath(Telerik.Sitefinity.Pages.Model.IPageTemplate)">
            <summary>
            Resolves the layout virtual path and ensures that file exist on the specified location.
            </summary>
            <param name="template">The template.</param>
            <returns>
            If the provided template is not in pure MVC mode returns null.
            If the provided template is in pure MVC mode returns virtual path like "~/SfLayouts/some_title.master" and ensures that this path is pointing to existing resource.
            Otherwise returns null. 
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer">
            <summary>
            This class builds the layout master page by using the Mvc view engines.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer.CreateController(System.Web.Routing.RouteData)">
            <summary>
            Creates a controller instance and sets its ControllerContext depending on the current Http context.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="routeData">The route data.</param>
            <param name="context">The context.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Can't create Controller Context if no active HttpContext instance is available.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer.RenderViewToString(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
            <summary>
            Renders the view to string.
            </summary>
            <param name="context">The context.</param>
            <param name="viewPath">The view path.</param>
            <param name="placeholdersOnly"></param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException">View cannot be found.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer.GetViewEngineResult(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
            <summary>
            Gets the view engine result.
            </summary>
            <param name="context">The context.</param>
            <param name="viewPath">The view path.</param>
            <param name="isPartial">if set to <c>true</c> method returns only partial views.</param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException">View cannot be found.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer.GetLayoutTemplate(System.String,System.Boolean)">
            <summary>
            Gets the layout template.
            </summary>
            <param name="templateName">The name of the layout template to render.</param>
            <param name="placeholdersOnly">When true the method returns a master page containing only content placeholders.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer.LayoutExists(System.String,System.Boolean)">
            <summary>
            Determines whether a layout with specified name exists.
            </summary>
            <param name="templateName"></param>
            <param name="partial">if set to <c>true</c> the result view should be partial.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer.LayoutViewPath(System.String)">
            <summary>
            Gets the file name of the layout.
            </summary>
            <param name="templateName">Name of the template.</param>
            <returns>File name of the layout.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutRenderer.GetPathTransformations">
            <summary>
            Gets the path transformations.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Designers.DesignerUrlAttribute">
            <summary>
            This attribute can be used to specify the URL of the MVC designer for the particular widget.
            </summary>
            <remarks> 
            Widget designers are meant to provide simple and straightforward user interface for setting widget properties.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Designers.DesignerUrlAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Designers.DesignerUrlAttribute"/> class.
            </summary>
            <param name="url">The designer URL.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Designers.DesignerUrlAttribute.Url">
            <summary>
            Gets the URL of the widget designer.
            </summary>
            <value>The URL of the widget designer.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Controllers.DesignerController">
            <summary>
            This class contains logic for resolving the views of the MVC designer of a widget.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Controllers.DesignerController.Master(System.String)">
            <summary>
            Returns the designer view which handles the property editing for a particular widget. 
            If there is custom designer for the particular widget it will be retrieved, otherwise it will fallback to the default designer.
            The default designer is located under <see cref="!:Telerik.Sitefinity.Frontend.Mvc.Views.Designer.Designer.cshtml"/>.
            </summary>
            <param name="widgetName">The name of the widget.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Controllers.DesignerController.View(System.String,System.String)">
            <summary>
            Returns specific view associated with the widget designer. If such view is available for the particular widget it will be displayed,
            otherwise it will try to fallback to the default view with the specified type (located in Telerik.Sitefinity.Frontend.Mvc.Views.Designer),
            If default view for the specified view type is not available exception will be thrown.
            </summary>
            <param name="widgetName">The name of the widget.</param>
            <param name="viewType">Type of the view which is requested. For example Simple, Advanced</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">View cannot be found on the searched locations.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Controllers.DesignerController.GetHttpContext">
            <summary>
            Gets the HTTP context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Controllers.DesignerController.GetModel(System.String,System.Guid)">
            <summary>
            Gets the model of the designer.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.LayoutsHelpers">
            <summary>
            Helper methods for work with Sitefinity layout templates.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Helpers.LayoutsHelpers.SectionTag">
            <summary>
            The section tag name.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Helpers.LayoutsHelpers.SectionHtml">
            <summary>
            The section HTML markup.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Helpers.LayoutsHelpers.PlaceHolderDefaultName">
            <summary>
            The content place holder default name.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LayoutsHelpers.SfPlaceHolder(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            HTML helper which adds the required content placeholder.
            </summary>
            <param name="helper">The helper.</param>
            <param name="containerName">Name of the container.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LayoutsHelpers.Section(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Html helper which renders all script tags.
            </summary>
            <param name="helper">The helper.</param>
            <param name="name">The name of the section.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LayoutsHelpers.ContentPlaceHolderMarkup(System.String)">
            <summary>
            Gets the ASPX markup of a content place holder.
            </summary>
            <param name="placeHolderName">Name of the place holder.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.LocalizationHelpers">
            <summary>
            Helpers for views that are related to localization.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LocalizationHelpers.Resource(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
            <summary>
            Get the resource string with the specified key from the resource files.
            </summary>
            <param name="helper">The helper.</param>
            <param name="key">The key.</param>
            <param name="fallbackToKey">If true then if a resource is not found with the specified key the key is returned.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LocalizationHelpers.Resource(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Get the resource string with the specified key from the resource files.
            </summary>
            <param name="helper">The helper.</param>
            <param name="key">The key</param>
            <param name="className">The class to search in</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LocalizationHelpers.Label(System.Web.Mvc.WebViewPage,System.String)">
            <summary>
            Get the label with the specified key from the resource files.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LocalizationHelpers.Label(System.Web.Mvc.ViewPage,System.String)">
            <summary>
            Get the label with the specified key from the resource files.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.LocalizationHelpers.Resource(System.Web.Mvc.ControllerBase,System.Web.Routing.RouteData,System.String,System.Boolean)">
            <summary>
            Get the label with the specified key from the resource files.
            </summary>
            <param name="controller">Controller that requests the resource.</param>
            <param name="key">The key.</param>
            <param name="fallbackToKey">If true then if a resource is not found with the specified key the key is returned.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ProviderHelpers">
            <summary>
            Helper methods for the Sitefinity providers
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.ProviderHelpers.DefaultProviderName(System.Web.Mvc.HtmlHelper,Telerik.Sitefinity.Data.IManager,System.String)">
            <summary>
            Gets the name of the default provider for the particular manager.
            </summary>
            <param name="helper">The helper.</param>
            <param name="manager">The manager.</param>
            <param name="dynamicModuleName">Name of the dynamic module.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.UrlHelpers">
            <summary>
            Extension methods for UrlHelper.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.UrlHelpers.WidgetContent(System.Web.Mvc.UrlHelper,System.String)">
            <summary>
            Resolves URL based on the current widget.
            </summary>
            <param name="helper">The URL helper.</param>
            <param name="contentPath">The content path.</param>
            <returns>Resolved URL.</returns>
            <exception cref="T:System.ArgumentNullException">contentPath</exception>
            <exception cref="T:System.InvalidOperationException">
            Could not resolve the given URL because RouteData of the current context is null.
            or
            Could not resolve the given URL because RouteData does not contain \controller\ key.
            </exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.UrlHelpers.WidgetContent(System.Web.Mvc.UrlHelper,System.String,System.String)">
            <summary>
            Resolves URL based on the current widget.
            </summary>
            <param name="helper">The helper.</param>
            <param name="contentPath">The content path.</param>
            <param name="assemblyName">Name of the assembly.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">contentPath</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.UrlHelpers.EmbeddedResource(System.Web.Mvc.UrlHelper,System.String,System.String)">
            <summary>
            Gets the URL of an embedded resource.
            </summary>
            <param name="helper">The helper.</param>
            <param name="type">A type from the assembly that embeds the resource.</param>
            <param name="path">The resource path.</param>
            <returns>The resource URL.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.UrlHelpers.GetResourcePath(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the resource path.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="contentPath">The content path.</param>
            <param name="paramaterName">Name of the paramater.</param>
            <param name="packageName">Name of the package.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder">
            <summary>
            This class is appends all additional data to the html of the layout template. This required header elements, scripts, stylesheets, form tags, etc.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.ProcessLayoutString(System.String)">
            <summary>
            Processes the layout string adding the required attributes to the head tag
            and also adding the required form tag.
            </summary>
            <param name="targetTemplate">The template.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.AddMasterPageDirectives(System.String)">
            <summary>
            Adds the master page directives.
            </summary>
            <param name="layoutHtmlValue">The layout HTML string.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.IsFormTagRequired">
            <summary>
            Determines whether the form tag is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.GetRequestedPageData">
            <summary>
            Gets the requested page data.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Invalid SiteMap node specified. Either the current group node doesn't have child nodes or the current user does not have rights to view any of the child nodes.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.GetRequestedPageNode">
            <summary>
            Gets the requested page node.
            </summary>
            <param name="requestContext">The request context.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">This resolver hasn’t been invoked with the proper route handler.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.AppendRequiredHeaderContent(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Appends the content of the required header.
            </summary>
            <param name="stringBuilder">The string builder.</param>
            <exception cref="T:System.InvalidOperationException">Invalid SiteMap node specified. Either the current group node doesn't have child nodes or the current user does not have rights to view any of the child nodes.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.GetRobotsMetaTag(Telerik.Sitefinity.Pages.Model.PageData)">
            <summary>
            Generates the robots meta tag.
            </summary>
            <param name="pageData">
            The information about the page.
            </param>
            <returns>
            Robots meta tag if page is not crawlable, otherwise empty string.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.GetKeywordsTag(Telerik.Sitefinity.Pages.Model.PageData)">
            <summary>
            Generates the page keywords meta tag from page data
            </summary>
            <param name="pageData">The information about the page</param>
            <returns>Keywords meta tag if page has set keywords, otherwise null</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.GetDescriptionTag(Telerik.Sitefinity.Pages.Model.PageData)">
            <summary>
            Generates the page description meta tag from page data
            </summary>
            <param name="pageData">The information about the page.</param>
            <returns>Description meta tag if page has set description, otherwise null</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.MasterPageBuilder.ResourceRegistrations">
            <summary>
            Generates scripts tag needed on the page. Doesn't include any resources for the default themes as opposite to the hybrid mode which always includes the default frontend theme.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.SitefinityControllerFactoryExtensions.ControllerSuffix">
            <summary>
            Constant containing the suffix in the type name that is expected in Controller types.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.SitefinityControllerFactoryExtensions.IsController(Telerik.Sitefinity.Mvc.ISitefinityControllerFactory,System.Type)">
            <summary>
            Determines whether the given type represents an MVC controller.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.SitefinityControllerFactoryExtensions.GetControllerName(Telerik.Sitefinity.Mvc.ISitefinityControllerFactory,System.Type)">
            <summary>
            Gets the name of the controller. It will remove "Controller" suffix if present.
            </summary>
            <param name="controllerType">Type of the controller.</param>
            <returns>
            The name of the controller. If present, "Controller" suffix will be removed.
            </returns>
            <exception cref="T:System.ArgumentNullException">controllerType</exception>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.TemplateTitleParser">
            <summary>
            This class is responsible for resolving the actual file name of the layout used for template based on convention.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.TemplateTitleParser.GetLayoutName(System.String)">
            <summary>
            Gets the layout name from template title. This method will strip and replace the special characters.
            </summary>
            <param name="templateTitle">The template title.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.TemplateTitleParser.StripPackageNameFromTemplateName(System.String)">
            <summary>
            Strips the name of the package name from template.
            If there is no existing package presented on the searched location the method will preserve the full template name.
            </summary>
            <param name="templateTitle">Title of the template.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualPathBuilder">
            <summary>
            This class is responsible for resolving virtual paths for the layout templates. 
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualPathBuilder.LayoutsPrefix">
            <summary>
            The layouts prefix.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualPathBuilder.LayoutSuffix">
            <summary>
            This suffix is recognized by the VirtualPathResolver for resolving the layout page.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualPathBuilder.LayoutVirtualPathTemplate">
            <summary>
            The template used when resolving the layout virtual path. 
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualPathBuilder.BuildPathFromTitle(System.String)">
            <summary>
            Builds the path from template title.
            </summary>
            <param name="templateTitle">Title of the template.</param>
            <returns> Resolved path will be in the following format: "~/SfLayouts/some_title.master"</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualPathBuilder.GetLayoutName(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Gets the layout file name from virtual path.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualPathBuilder.AddVariablesToPath(System.String)">
            <summary>
            Adds variable parameters to the virtual path to allow caching of multiple versions based on parameters.
            </summary>
            <param name="layoutVirtualPath">The layout virtual path.</param>
            <returns>The path with appended variables.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants">
            <summary>
            This class contains commonly used MVC words, phrases and extensions.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.#cctor">
            <summary>
            Initialize dependant static variables.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.MvcFieldControlNameTemplate">
            <summary>Template for <see cref="!:ControlPresentation"/>'s fields. Used by MVC widgets.</summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.MvcSuffix">
            <summary>Suffix for MVC widgets friendly control name</summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.RazorFileNameExtension">
            <summary>Filename extension used by Razor views</summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.MvcTemplateCondition">
            <summary>
            The MVC template condition
            </summary>
            <remarks>
            {Module type full name} AND MVC;
            </remarks>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.FriendlyControlDynamicListTemplate">
            <summary>
            The friendly control name template for list.
            </summary>
            <remarks>
            {Module title} - {ModuleType plural name} - list (MVC);
            </remarks>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.FriendlyControlDynamicDetailTemplate">
            <summary>
            The friendly control name template for detail.
            </summary>
            <remarks>
            {Module title} - {ModuleType plural name} - single (MVC);
            </remarks>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.DetailTemplateName">
            <summary>
            The detail template name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.ListTemplateName">
            <summary>
            The list template name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.MvcConstants.DynamicAreaFormat">
            <summary>
            The area format.
            </summary>
            <remarks>
            {Module title} - {ModuleType display name};
            </remarks>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.CategoryParamResolver">
            <summary>
            Instances of this class resolve category by UrlName.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TaxonParamResolver">
            <summary>
            Instances of this class resolve taxon of a given taxonomy by URL.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.RouteParamResolverBase">
            <summary>
            A base route param resolver that provides responsibility chain logic.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IRouteParamResolver">
            <summary>
            Classes that implement this interface should provide responsibility chain logic for resolving a specific route parameter.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IRouteParamResolver.SetNext(Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IRouteParamResolver)">
            <summary>
            Sets the next parameter resolver.
            </summary>
            <param name="nextResolver">The next resolver.</param>
            <returns>The resolver that was just set.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IRouteParamResolver.TryResolveParam(System.String,System.Object@)">
            <summary>
            Tries to resolve the URL parameter.
            </summary>
            <param name="urlParam">The URL parameter.</param>
            <param name="value">The resolved value.</param>
            <returns>Whether the resolver was able to get value from the URL parameter.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IRouteParamResolver.Next">
            <summary>
            Gets the next parameter resolver.
            </summary>
            <value>
            The next parameter resolver.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.RouteParamResolverBase.SetNext(Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IRouteParamResolver)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.RouteParamResolverBase.TryResolveParam(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.RouteParamResolverBase.TryResolveParamInternal(System.String,System.Object@)">
            <summary>
            Tries to resolve the URL parameter. Does not fallback to the next resolver.
            </summary>
            <param name="urlParam">The URL parameter.</param>
            <param name="value">The resolved value.</param>
            <returns>Whether the resolver was able to get value from the URL parameter.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.RouteParamResolverBase.Next">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TaxonParamResolver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TaxonParamResolver"/> class.
            </summary>
            <param name="taxonomyName">Name of the taxonomy where the taxon will be expected.</param>
            <exception cref="T:System.ArgumentException">When taxonomy with the given name is not found.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TaxonParamResolver.TryResolveParamInternal(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TaxonParamResolver.Taxonomy">
            <summary>
            Gets the taxonomy.
            </summary>
            <value>
            The taxonomy.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.CategoryParamResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.CategoryParamResolver"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IntParamResolver">
            <summary>
            Instances of this class resolve integers.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IntParamResolver.TryResolveParamInternal(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.CustomActionParamsMapper">
            <summary>
            Instances of this class map URL parameters to Route Data following a provided route template and action name.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase">
            <summary>
            A base URL params mapper that provides responsibility chain logic.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IUrlParamsMapper">
            <summary>
            Classes that implement this interface should provide responsibility chain logic for mapping URL parameters to route data.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IUrlParamsMapper.SetNext(Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IUrlParamsMapper)">
            <summary>
            Sets the next URL parameter mapper.
            </summary>
            <param name="nextMapper">The next mapper.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IUrlParamsMapper.ResolveUrlParams(System.String[],System.Web.Routing.RequestContext)">
            <summary>
            Resolves the URL parameters. Should call RouteHelper.SetUrlParametersResolved if the mapping was successful.
            </summary>
            <param name="urlParams">The URL parameters.</param>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IUrlParamsMapper.Next">
            <summary>
            Gets the next URL parameter mapper.
            </summary>
            <value>
            The next URL parameter mapper.
            </value>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.ActionNameKey">
            <summary>
            The action name key for the RouteData values.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.#ctor(System.Web.Mvc.ControllerBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.SetNext(Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IUrlParamsMapper)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.ResolveUrlParams(System.String[],System.Web.Routing.RequestContext)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.MapParams(System.Reflection.MethodInfo,System.String[],System.String[])">
            <summary>
            Creates parameter map in order to map the URL parameters to the provided URL template
            </summary>
            <param name="actionMethod">The action method.</param>
            <param name="metaParams">The meta parameters.</param>
            <param name="urlParams">The URL parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.TryResolveRouteParam(System.Reflection.MethodInfo,System.String,System.String,System.Collections.Generic.IList{Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo})">
            <summary>
            Tries to resolve route parameters and map them to specific part of the url.
            </summary>
            <remarks>
            If needed tries to interpret the route value through <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.IRouteParamResolver"/>
            </remarks>
            <param name="actionMethod">The action method.</param>
            <param name="routeParam">The route parameter.</param>
            <param name="urlParam">The URL parameter.</param>
            <param name="parameterMap">The parameter map.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.TryMatchUrl(System.String[],System.Web.Routing.RequestContext)">
            <summary>
            Matches the URL parameters.
            </summary>
            <param name="urlParams">The URL parameters.</param>
            <param name="requestContext">The request context.</param>
            <returns>true if resolving was successful. In this case does not fallback to next mappers. Else returns false</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.Next">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlParamsMapperBase.Controller">
            <summary>
            Gets the controller.
            </summary>
            <value>
            The controller.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.CustomActionParamsMapper.#ctor(System.Web.Mvc.ControllerBase,System.Func{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.CustomActionParamsMapper"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="routeTemplateResolver">This function should return the route template that the mapper will use.</param>
            <param name="actionName">Name of the action.</param>
            <exception cref="T:System.ArgumentNullException">routeTemplateResolver</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.CustomActionParamsMapper.TryMatchUrl(System.String[],System.Web.Routing.RequestContext)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DefaultUrlParamsMapper">
            <summary>
            Instances of this class call the default Sitefinity logic for mapping URL parameters to route data.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DefaultUrlParamsMapper.#ctor(System.Web.Mvc.ControllerBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DefaultUrlParamsMapper"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DefaultUrlParamsMapper.TryMatchUrl(System.String[],System.Web.Routing.RequestContext)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper">
            <summary>
            Instances of this class resolve specific content item by the URL.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.DefaultActionName">
            <summary>
            The default details action name.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.#ctor(System.Web.Mvc.ControllerBase,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="itemType">Type of the item that is expected.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.#ctor(System.Web.Mvc.ControllerBase,System.Type,System.Func{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="itemType">Type of the item that is expected.</param>
            <param name="providerNameResolver">A function that returns provider name for the content. If null then default provider is used.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.#ctor(System.Web.Mvc.ControllerBase,System.Type,System.Func{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="itemType">Type of the item that is expected.</param>
            <param name="providerNameResolver">A function that returns provider name for the content. If null then default provider is used.</param>
            <param name="actionName">Name of the action.</param>
            <exception cref="T:System.ArgumentException">When the given controller does not contain a method corresponding to the action name.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.TryMatchUrl(System.String[],System.Web.Routing.RequestContext)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.AddContentItemToRouteData(System.Web.Routing.RequestContext,System.String,Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Adds the content item to route data.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.GetItemByUrl(System.String,System.String@)">
            <summary>
            Gets content item by URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="redirectUrl">The redirect URL.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.ResolveManager">
            <summary>
            Resolves the manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.ResolveRequestedItemStatus">
            <summary>
            This method returns the requested item status based on content location url parameters.
            </summary>
            <remarks>Copied from IContentLocatableView in Sitefinity. Should use it instead when it goes public.</remarks>
            <returns>Requested item status.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper.IsPreviewRequested">
            <summary>
            Determines whether preview of the item is requested.
            </summary>
            <remarks>Copied from IContentLocatableView in Sitefinity. Should use it instead when it goes public.</remarks>
            <returns>Whether preview is requested.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper`1">
            <summary>
            Instances of this class resolve specific content item by the URL.
            </summary>
            <typeparam name="TContent">The type of the content that should be resolved.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper`1.#ctor(System.Web.Mvc.ControllerBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper`1"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper`1.#ctor(System.Web.Mvc.ControllerBase,System.Func{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper`1"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="providerNameResolver">A function that returns provider name for the content. If null then default provider is used.</param>
            <exception cref="T:System.ArgumentException">When the given controller does not contain a method corresponding to the action name.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper`1.#ctor(System.Web.Mvc.ControllerBase,System.Func{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DetailActionParamsMapper`1"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="providerNameResolver">A function that returns provider name for the content. If null then default provider is used.</param>
            <param name="actionName">Name of the action.</param>
            <exception cref="T:System.ArgumentException">When the given controller does not contain a method corresponding to the action name.</exception>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DynamicUrlParamActionInvoker">
            <summary>
            Extends <see cref="T:Telerik.Sitefinity.Mvc.ControllerActionInvoker"/> by providing logic for custom routing.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DynamicUrlParamActionInvoker.ControllerNameKey">
            <summary>
            The controller name key
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DynamicUrlParamActionInvoker.InitializeRouteParameters(Telerik.Sitefinity.Mvc.Proxy.MvcProxyBase)">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DynamicUrlParamActionInvoker.ExecuteController(Telerik.Sitefinity.Mvc.Proxy.MvcProxyBase)">
            <summary>
            Logs exceptions thrown by the invocation of <see cref="!:ControllerActionInvoker"/>
            </summary>
            <param name="proxyControl">The proxy control.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DynamicUrlParamActionInvoker.GetDefaultParamsMapper(System.Web.Mvc.ControllerBase)">
            <summary>
            Gets the default parameters mapper.
            </summary>
            <param name="controller">The controller.</param>
            <returns>The default parameters mapper for the controller.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.DynamicUrlParamActionInvoker.ShouldDisplayErrors">
            <summary>
            Determines whether errors should be displayed.
            </summary>
            <returns>True if errors should be displayed, False to fail silently.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TagParamResolver">
            <summary>
            Instances of this class resolve tag by UrlName.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TagParamResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.TagParamResolver"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo">
            <summary>
            This class represents information about single segment from the URL template.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo"/> class.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="resolverName">Name of the resolver.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <value>
            The name of the parameter.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo.ResolverName">
            <summary>
            Gets or sets the name of the resolver.
            </summary>
            <value>
            The name of the resolver.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing.UrlSegmentInfo.ParameterValue">
            <summary>
            Gets or sets the parameter value.
            </summary>
            <value>
            The parameter value.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.ScriptDependencyResolver">
            <summary>
            This class resolves script dependencies for components.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ScriptDependencyResolver.GetScripts(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the scripts.
            </summary>
            <param name="components">The components.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel">
            <summary>
            View model for views that display the details of a single content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel.ContentType">
            <summary>
            Gets or sets the type of content that is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>The name of the provider.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel.CssClass">
            <summary>
            Gets or sets the CSS class that will be applied on the wrapper div of the widget.
            </summary>
            <value>
            The CSS class.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>
            The detail news.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel.EnableSocialSharing">
            <summary>
            Gets or sets a value indicating whether to enable social sharing.
            </summary>
            <value>
              <c>true</c> if should enable social sharing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel">
            <summary>
            View model for views that display a list of content items.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>The name of the provider.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel.ContentType">
            <summary>
            Gets or sets the type of content that is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel.CssClass">
            <summary>
            Gets or sets the CSS class that will be applied on the wrapping element of the widget.
            </summary>
            <value>
            The CSS class.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel.Items">
            <summary>
            Gets an enumerable of the items that should be displayed.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel.TotalPagesCount">
            <summary>
            Gets or sets the total pages count.
            </summary>
            <value>
            The total pages count.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel.CurrentPage">
            <summary>
            Gets or sets the current page.
            </summary>
            <value>
            The current page.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel.ShowPager">
            <summary>
            Gets or sets a value indicating whether to show pager.
            </summary>
            <value>
              <c>true</c> to show pager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase">
            <summary>
            A base class of models that contain logic for querying content.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.GetLocations">
            <summary>
            Gets the information for all of the content types that a control is able to show.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.CreateListViewModel(Telerik.Sitefinity.Taxonomies.Model.ITaxon,System.Int32)">
            <summary>
            Creates a view model for use in list views.
            </summary>
            <param name="taxonFilter">The taxon filter.</param>
            <param name="page">The page.</param>
            <returns>A view model for use in list views.</returns>
            <exception cref="T:System.ArgumentException">'page' argument has to be at least 1.;page</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.CreateListViewModelByRelatedItem(Telerik.Sitefinity.Model.IDataItem,System.Int32)">
            <summary>
            Creates a view model for use in list views filtered by related item.
            </summary>
            <param name="relatedItem">Item that is related to the resulting items</param>
            <param name="page">The page.</param>
            <returns>A view model for use in list views.</returns>
            <exception cref="T:System.ArgumentException">'page' argument has to be at least 1.;page</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.CreateDetailsViewModel(Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Creates the details view model.
            </summary>
            <param name="item">The item.</param>
            <returns>A view model for use in detail views.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.GetKeysOfDependentObjects(Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel)">
            <summary>
            Gets a collection of <see cref="!:CacheDependencyNotifiedObject"/>.
                The <see cref="!:CacheDependencyNotifiedObject"/> represents a key for which cached items could be subscribed for
                notification.
                When notified, all cached objects with dependency on the provided keys will expire.
            </summary>
            <param name="viewModel">View model that will be used for displaying the data.</param>
            <returns>
            The <see cref="T:System.Collections.IList"/>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.GetKeysOfDependentObjects(Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel)">
            <summary>
            Gets a collection of <see cref="!:CacheDependencyNotifiedObject"/>.
                The <see cref="!:CacheDependencyNotifiedObject"/> represents a key for which cached items could be subscribed for
                notification.
                When notified, all cached objects with dependency on the provided keys will expire.
            </summary>
            <param name="viewModel">View model that will be used for displaying the data.</param>
            <returns>
            The <see cref="T:System.Collections.IList"/>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.GetItemsQuery">
            <summary>
            Gets an active query for all items.
            </summary>
            <returns>The query.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.ApplyListSettings(System.Int32,System.Linq.IQueryable{Telerik.Sitefinity.Model.IDataItem},System.Nullable{System.Int32}@)">
            <summary>
            Applies the list settings.
            </summary>
            <param name="page">The page.</param>
            <param name="query">The items query.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.CreateListViewModelInstance">
            <summary>
            Creates a blank instance of a list view model.
            </summary>
            <returns>The list view model.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.CreateDetailsViewModelInstance">
            <summary>
            Creates a blank instance of a details view model.
            </summary>
            <returns>The details view model.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.CreateItemViewModelInstance(Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Creates an instance of the item view model by given data item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.CompileFilterExpression">
            <summary>
            Compiles a filter expression based on the widget settings.
            </summary>
            <returns>Filter expression that will be applied on the query.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.PopulateListViewModel(System.Int32,System.Linq.IQueryable{Telerik.Sitefinity.Model.IDataItem},Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel)">
            <summary>
            Populates the list ViewModel.
            </summary>
            <param name="page">The current page.</param>
            <param name="query">The query.</param>
            <param name="viewModel">The view model.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.SetViewModelProperties(Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Sets the view model properties.
            </summary>
            <param name="viewModel">The view model.</param>
            <param name="page">The page.</param>
            <param name="totalPages">The total pages.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.GetManager">
            <summary>
            Gets a manager instance for the model.
            </summary>
            <returns>The manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.UpdateExpression(System.Linq.IQueryable{Telerik.Sitefinity.Model.IDataItem},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            Updates the expression.
            </summary>
            <param name="query">The query.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <param name="totalCount">The total count.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.AddLiveFilterExpression(System.String)">
            <summary>
            Appends the lifecycle conditions to the filter expression in order to get only live items.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <returns>Filter expression for live items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.AdaptMultilingualFilterExpression(System.String)">
            <summary>
            Adapts a filter expression in multilingual.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <returns>Multilingual filter expression.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.SetExpression``1(System.Linq.IQueryable{``0},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            Modifies the given query with the given filter, sort expression and paging.
            </summary>
            <param name="query">The query.</param>
            <param name="filterExpression">The filter expression.</param>
            <param name="sortExpr">The sort expression.</param>
            <param name="itemsToSkip">The items to skip.</param>
            <param name="itemsToTake">The items to take.</param>
            <param name="totalCount">The total count.</param>
            <returns>Resulting filtered query.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.ContentType">
            <summary>
            Gets or sets the type of content that is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.ListCssClass">
            <summary>
            Gets or sets the CSS class that will be applied on the wrapping element of the widget when it is in List view.
            </summary>
            <value>
            The CSS class.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.DetailCssClass">
            <summary>
            Gets or sets the CSS class that will be applied on the wrapper div of the widget when it is in Details view.
            </summary>
            <value>
            The CSS class.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.SerializedSelectedItemsIds">
            <summary>
            Gets the list of items to be displayed inside the widget when option "Selected items" is enabled.
            </summary>
            <value>
            The selected item ids.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.EnableSocialSharing">
            <summary>
            Gets or sets a value indicating whether to enable social sharing.
            </summary>
            <value>
              <c>true</c> if should enable social sharing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>The name of the provider.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.SelectionMode">
            <summary>
            Gets or sets which items to be displayed in the list view.
            </summary>
            <value>The page display mode.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.DisplayMode">
            <summary>
            Gets or sets a value indicating whether to divide items in the list.
            </summary>
            <value>
            The display mode.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.ItemsPerPage">
            <summary>
            Gets or sets the items count per page.
            </summary>
            <value>
            The items per page.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.SortExpression">
            <summary>
            Gets or sets the sort expression.
            </summary>
            <value>
            The sort expression.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.FilterExpression">
            <summary>
            Gets or sets the additional filter expression.
            </summary>
            <value>
            The filter expression.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.SerializedAdditionalFilters">
            <summary>
            Gets or sets the serialized additional filters.
            </summary>
            <value>
            The serialized additional filters.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.DisableCanonicalUrlMetaTag">
            <summary>
            Gets or sets a value indicating whether the canonical URL tag should be added to the page when the canonical meta tag should be added to the page.
            If the value is not set, the settings from SystemConfig -> ContentLocationsSettings -> DisableCanonicalURLs will be used. 
            </summary>
            <value>The disable canonical URLs.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.RelatedItemType">
            <summary>
            Gets or sets the type of the parent item.
            </summary>
            <value>
            The type of the parent item.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.RelatedItemProviderName">
            <summary>
            Gets or sets the name of the parent item provider.
            </summary>
            <value>
            The name of the parent item provider.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.RelatedFieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ContentModelBase.RelationTypeToDisplay">
            <summary>
            Gets or sets the relation type of the items that will be display - children or parent.
            </summary>
            <value>
            The relation type of the items that will be display - children or parent.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel">
            <summary>
            This class is used as a model for the designer controller.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.IDesignerModel">
            <summary>
            This interface is used as a model for the DesignerController.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.IDesignerModel.Views">
            <summary>
            Gets the available designer views.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.IDesignerModel.ScriptReferences">
            <summary>
            Gets the script references that the designer should render.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.IDesignerModel.DefaultView">
            <summary>
            Gets the default view.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.IDesignerModel.Control">
            <summary>
            Gets the control that is being edited.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.IDesignerModel.Caption">
            <summary>
            Gets the caption of the designer.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel"/> class.
            </summary>
            <param name="views">The views that are available to the controller.</param>
            <param name="viewLocations">The locations where view files can be found.</param>
            <param name="widgetName">Name of the widget that is being edited.</param>
            <param name="controlId">Id of the control that is edited.</param>
            <param name="preselectedView">Name of the preselected view if there is one. Otherwise use null.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.IsDesignerView(System.String)">
            <summary>
            Determines whether the given file represents a designer view.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.ExtractViewName(System.String)">
            <summary>
            Extracts the name of the view.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.PopulateScriptReferences(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Telerik.Sitefinity.Frontend.Mvc.Models.DesignerViewConfigModel}})">
            <summary>
            Populates the script references.
            </summary>
            <param name="widgetName">Name of the widget.</param>
            <param name="viewConfigs">The view configs.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.GetViewScriptFileName(System.String)">
            <summary>
            Gets the name of the script file for a given view.
            </summary>
            <param name="view">The view.</param>
            <returns>File name of the client script file for a given view.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.GetViewConfig(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the view configuration.
            </summary>
            <param name="view">The view.</param>
            <param name="viewLocations">Locations where view files can be found.</param>
            <returns>Config for the given view if such config exists.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.Views">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.ScriptReferences">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.DefaultView">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.Control">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerModel.Caption">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerViewConfigModel">
            <summary>
            This class represents a JSON configuration for designer views.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerViewConfigModel.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerViewConfigModel.Hidden">
            <summary>
            Gets or sets a value indicating whether this view is hidden.
            </summary>
            <value>
              <c>true</c> if hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerViewConfigModel.Scripts">
            <summary>
            Gets or sets the scripts that the view requires to be loaded.
            </summary>
            <value>
            The scripts.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.DesignerViewConfigModel.Components">
            <summary>
            Gets or sets the components.
            </summary>
            <value>
            The components.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.DynamicDataItemFieldAccessor">
            <summary>
            Instances of this class are used to access fields of data items dynamically.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DynamicDataItemFieldAccessor.#ctor(Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Models.DynamicDataItemFieldAccessor"/> class.
            </summary>
            <param name="item">The data item.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DynamicDataItemFieldAccessor.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result" />.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.DynamicDataItemFieldAccessor.GetMemberValue(System.String)">
            <summary>
            Gets the member value.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>The value of the member.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel">
            <summary>
            This class represents view model for items.
            </summary>
            <remarks>
            It is used in Master/detail widgets.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.#ctor(Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.SerializeToJson(System.String)">
            <summary>
            Serializes to JSON.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetAddressString(System.String,System.String)">
            <summary>
            Gets the address value string depending on the provided format.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="format">The address format.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetDateTime(System.String,System.String)">
            <summary>
            Gets formatted date time value.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="format">The field format.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetPrice(System.String,System.String)">
            <summary>
            Gets formatted date time value.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="format">The field format.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetBool(System.String)">
            <summary>
            Gets field value as Yes/No string.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetMultipleChoiceValueString(System.String)">
            <summary>
            Gets the multiple choice value string.
            </summary>
            <param name="multiChoiceValues">The multi choice values.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetFlatTaxons(System.String)">
            <summary>
            Gets the flat taxons.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="classificationId">The classification identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetHierarchicalTaxons(System.String)">
            <summary>
            Gets the list of hierarchical taxons.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetFlatTaxon(System.String)">
            <summary>
            Gets the flat taxon.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.GetHierarchicalTaxon(System.String)">
            <summary>
            Gets the hierarchical taxon.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.RelatedItems(System.String)">
            <summary>
            Gets related items.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.RelatedItem(System.String)">
            <summary>
            Gets the related item when single.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.FieldCacheKey(System.String,System.String)">
            <summary>
            Gets the cache key for <see cref="F:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.cachedFieldValues"/>.
            </summary>
            <param name="methodName">Name of the method.</param>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.cachedFieldValues">
            <summary>
            Contains the cached field values.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.DataItem">
            <summary>
            Gets the data item that is represented by this view model.
            </summary>
            <value>
            The data item.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.Fields">
            <summary>
            Gets a property that accesses fields of the data item that is represented by this view model.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.DefaultUrl">
            <summary>
            Gets the default URL.
            </summary>
            <value>
            The default URL.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel.Identifier">
            <summary>
            Gets the value of the identifier field for the item.
            </summary>
            <example><see cref="!:NewsItem"/> identifier is its Title.</example>
            <value>
            The identifier value.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.ListDisplayMode">
            <summary>
            The rendering options for the lists.
            </summary>
            <remarks>
            Each option describes different options for dividing items in the list.
            </remarks>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Models.ListDisplayMode.Paging">
            <summary>
            Display list divided on pages.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Models.ListDisplayMode.Limit">
            <summary>
            Display only limited number of items.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Models.ListDisplayMode.All">
            <summary>
            Display all items.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Models.SelectionMode">
            <summary>
            The rendering options for a widget. 
            </summary>
            <remarks>
            Each option describes different selection of items that will be included while rendering a widget.
            </remarks>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Models.SelectionMode.AllItems">
            <summary>
            Refers to all items.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Models.SelectionMode.SelectedItems">
            <summary>
            Refers to custom selection of items.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Models.SelectionMode.FilteredItems">
            <summary>
            Refers to filtered items based on a custom criteria.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources">
            <summary>
            Localizable strings for the Widget designer.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources.DesignerResourcesTitle">
            <summary>
            Title for the widget resources resources class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources.DesignerResourcesDescription">
            <summary>
            Description for the widget designer resources class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources.Error">
            <summary>
            Error!
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources.Cancel">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources.SaveAllTranslations">
            <summary>
            Save All Translations
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.StringResources.DesignerResources.PropertyGrid">
            <summary>
            Advanced
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.GenericRouteHandler`1">
            <summary>
            Instances of this class should instantiate HTTP handlers of a specified type.
            </summary>
            <typeparam name="THttpHandler">The type of the HTTP handler.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.GenericRouteHandler`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.GenericRouteHandler`1"/> class.
            </summary>
            <param name="construct">A method used to construct an HTTP handler.</param>
            <exception cref="T:System.ArgumentNullException">construct</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.GenericRouteHandler`1.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns>
            An object that processes the request.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor">
            <summary>
            Instances of this class run and compile Razor template files and return the output. It also manages cache dependencies on the template internally.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor.#ctor(RazorEngine.Templating.ITemplateService)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor"/> class.
            </summary>
            <param name="templateService">The template service.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor.#ctor(RazorEngine.Templating.ITemplateService,System.Web.Hosting.VirtualPathProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor"/> class.
            </summary>
            <param name="templateService">The template service.</param>
            <param name="virtualPathProvider">The virtual path provider for retrieving files.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor.Run(System.String,System.Object)">
            <summary>
            Runs the Razor template that is on the specified path.
            </summary>
            <param name="templatePath">The template path.</param>
            <param name="model">The model.</param>
            <returns>The output of the template. If compilation error occurs it will be returned and NOT thrown.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor.Run(System.String,System.Object,System.Boolean)">
            <summary>
            Runs the specified template path.
            </summary>
            <param name="templatePath">The template path.</param>
            <param name="model">The model.</param>
            <param name="throwOnError">if set to <c>true</c> compilation errors will be thrown otherwise the errors will be returned as string.</param>
            <returns>The output of the template.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.RazorTemplateProcessor.GetTemplate(System.String)">
            <summary>
            Gets the template from a file at the specified path as string.
            </summary>
            <param name="path">The path.</param>
            <returns>The template as string.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.ResourceRegister">
            <summary>
            This class provides functionality for registering client resources.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.#ctor(System.String,System.Web.HttpContextBase)">
            <summary>
            Constructs a new instances of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.ResourceRegister"/> class.
            </summary>
            <param name="name">The name of the register.</param>
            <param name="httpContext">The HTTP context.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.Register(System.String,System.String,System.Boolean)">
            <summary>
            Registers a client resource. A return value indicates whether the registration succeeded.
            </summary>
            <param name="resourceKey">The attributes associated with the resource.</param>
            <param name="sectionName">The section name in which the resource should be rendered.</param>
            <param name="throwException">The section name in which the resource should be rendered.</param>
            <returns>
            <value>true</value> if s was registered successfully; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.IsRegistered(System.String,System.String)">
            <summary>
            Checks if a client resource is registered for a section.
            </summary>
            <param name="resourceKey">The attributes associated with the resource.</param>
            <param name="sectionName">The section name in which the resource should be rendered.</param>
            <returns>
            <value>true</value> if s was registered; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.IsRendered(System.String)">
            <summary>
            Determines whether the specified resource is already rendered.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>
            Whether the specified resource is already rendered.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.MarkAsRendered(System.String)">
            <summary>
            Marks the resource as rendered.
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.GetResourcesForSection(System.String)">
            <summary>
            Get all resources for a section.
            </summary>
            <param name="sectionName">The name of the section key.</param>
            <returns>
            A collection of all resources for a section.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.GetInlineResources">
            <summary>
            Get all inline resources.
            </summary>
            <returns>
            A collection of all inline resources.
            </returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.Rendered">
            <summary>
            Gets a set of already rendered resources.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.Container">
            <summary>
            Gets the current container that contains the registered resources.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.ResourceRegister.Context">
            <summary>
            Gets the current <see cref="T:System.Web.HttpContextBase"/> instance.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.PackageManager">
            <summary>
            This class is used for package management.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.PackageManager.PackagesFolder">
            <summary>
            The folder where packages are located.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.PackageManager.FileNameStripingRegexPattern">
            <summary>
            The regex pattern for stripping file names.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.PackageManager.FileNameInvalidCharactersSubstitute">
            <summary>
            The file name incorrect characters substitute
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.PackageManager.CurrentPackageKey">
            <summary>
            The current package key
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetCurrentPackage">
            <summary>
            Gets the current resource package.
            </summary>
            <returns>The current resource package or null if there is no package.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetPackageVirtualPath(System.String)">
            <summary>
            Gets the package virtual path.
            </summary>
            <param name="packageName">Name of the package.</param>
            <exception cref="T:System.ArgumentNullException">packageName</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetCurrentPackageVirtualPath">
            <summary>
            Gets the current package virtual path.
            </summary>
            <returns>The virtual path of the current package or null if there is no package.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.EnhanceUrl(System.String)">
            <summary>
            Enhances the given URL with information about the current package.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.StripInvalidCharacters(System.String)">
            <summary>
            Gets file name from title by stripping the incorrect characters.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetEditedContainerKey(System.Web.HttpContextBase)">
            <summary>
            Gets the key of the edited container.
            </summary>
            <param name="context">The context.</param>
            <remarks>That is page template Id when editing page template or message body Id when editing Email Campaigns issue.</remarks>
            <returns>The key.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetPackageFromNodeId(System.String)">
            <summary>
            Gets the package from node identifier.
            </summary>
            <param name="nodeId">The node identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetPackageFromTemplateId(System.String)">
            <summary>
            Gets the package from template identifier.
            </summary>
            <param name="templateId">The template identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetPackageFromTemplate(Telerik.Sitefinity.Pages.Model.PageTemplate)">
            <summary>
            Gets the package from template.
            </summary>
            <param name="template">The template.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetPackageFromPageInfo">
            <summary>
            Gets the package from the page template or from the Current PageSiteNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetPackageFromContext">
            <summary>
            Gets the package from context parameters collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.PackageManager.GetPackageFromUrl">
            <summary>
            Gets the package from the URL query string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FrontendManager">
            <summary>
            This class manages instances of classes that are that are used to integrate the web application with the MVC framework.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FrontendManager.VirtualPathBuilder">
            <summary>
            Gets an instance of the virtual path builder.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FrontendManager.ControllerFactory">
            <summary>
            Gets an instance of the controller registry.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FrontendManager.AuthenticationEvaluator">
            <summary>
            Gets or sets an instance of authentication evaluator
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.LocalizationAttribute">
            <summary>
            This attribute is used to specify how <see cref="!:IController"/> views are localized.
            </summary>
            <remarks>Apply on controllers.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.LocalizationAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.LocalizationAttribute"/> class.
            </summary>
            <param name="resourceClass">The resource class.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.LocalizationAttribute.ResourceClass">
            <summary>
            Gets or sets the resource class.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FilesMonitoring.ResourceType">
            <summary>
            This enumeration represents the types of resources.
            Each type should correspond to a folder where the resource can be found.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler">
            <summary>
            This class is an HttpHandler that is used for delivering files from a virtual path.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
            <exception cref="T:System.Web.HttpException">404;Not found</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.FileExists(System.String)">
            <summary>
            Checks if a files exists on the given <paramref name="path"/>.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.OpenFile(System.String)">
            <summary>
            Opens the file on the given <paramref name="path"/>.
            </summary>
            <param name="path">The path.</param>
            <returns>The stream with the file content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.WriteToOutput(System.Web.HttpContext,System.Byte[])">
            <summary>
            Writes the given buffer to output.
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.IsWhitelisted(System.String)">
            <summary>
            Determines whether the specified path is whitelisted for executing server code.
            </summary>
            <param name="path">The path.</param>
            <returns>Whether the specified path is whitelisted for execution server code.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.SendStaticResource(System.Web.HttpContext,System.IO.Stream,System.String)">
            <summary>
            Writes the contents of a static resource to the response.
            </summary>
            <param name="context">The context.</param>
            <param name="fileStream">The file stream.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.SendParsedTemplate(System.Web.HttpContext)">
            <summary>
            Sends a parsed template that is processed with the Razor engine.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.SetResponseClientCache(System.Web.HttpContext,System.String)">
            <summary>
            Sets client cache for the requested resource. In debug mode this caching is disabled.
            </summary>
            <param name="context">The context.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.GetMimeMapping(System.String)">
            <summary>
            Gets the mime type of the file.
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.ResourceHttpHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.
            </summary>
            <returns>true if the <see cref="T:System.Web.IHttpHandler" /> instance is reusable; otherwise, false.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.ResourcesInitializer">
            <summary>
            This class contains logic for configuring the functionality related to the resolving of resources.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourcesInitializer.HandleIDataEvent(Telerik.Sitefinity.Data.Events.IDataEvent)">
            <summary>
            Modifies newly created <see cref="T:Telerik.Sitefinity.Pages.Model.ControlPresentation"/> by adding suffix, when creating a widget template for MVC Widget.
            </summary>
            <param name="eventArgs">The event args.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor">
            <summary>
            Instance of this class replaces resources in a given template with their localized values.
            The instance provides in-memory cache for all parsed templates.
            A template's cache is invalidated when the file with the given file path is changed and also when the app is restarted.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor.#ctor(System.Web.Hosting.VirtualPathProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor"/> class.
            </summary>
            <param name="virtualPathProvider">The virtual path provider for retrieving files.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor.Process(System.String)">
            <summary>
            Localizes the template at the specified path.
            </summary>
            <param name="templatePath">The template path.</param>
            <returns>The localized template.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor.ReplaceResources(System.String)">
            <summary>
            Replaces the resources in the given markup with their respective localized values.
            </summary>
            <param name="markup">The markup.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor.GetTemplate(System.String)">
            <summary>
            Gets the template from a file at the specified path as string.
            </summary>
            <param name="path">The path.</param>
            <returns>The template as string.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ResourceTemplateProcessor.ShouldProcessTemplate(System.String)">
            <summary>
            Determines whether the template should be parsed - when the file is changed or if it is not in the cache.
            </summary>
            <param name="templatePath">The template path.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler">
            <summary>
            Instances of this class represent an HTTP handler that returns JavaScript containing dependencies to the server.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.GetScript">
            <summary>
            Gets the processed script.
            </summary>
            <remarks>The result will be cached.</remarks>
            <returns>The processed script.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.GetRawScript">
            <summary>
            Gets the script from a predefined file.
            </summary>
            <returns>The script as it is recorded in the file.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.GetApplicationPath">
            <summary>
            Gets the application path.
            </summary>
            <returns>The application path.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.GetFrontendLanguages">
            <summary>
            Gets the frontend languages for the current site.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.GetCurrentSiteId">
            <summary>
            Gets the id of the current site.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.GetCacheManager">
            <summary>
            Gets the cache manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.GetCacheDependency(System.Guid)">
            <summary>
            Gets the cache dependancy that will invalidate the script's cache.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.CurrentFrontendRootNodeId">
            <summary>
            Gets the current front-end root node id.
            </summary>
            <value>The current front-end root node id.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.ServerContextHandler.CurrentUserId">
            <summary>
            Gets the current user id.
            </summary>
            <value>The current user id.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.UrlTransformations">
            <summary>
            This is a static class that contains methods for URL manipulations.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.UrlTransformations.AppendParam(System.String,System.String,System.String)">
            <summary>
            Appends a parameter to a give url.
            </summary>
            <param name="url">The URL.</param>
            <param name="parameterName">Name of the paramater.</param>
            <param name="parameterValue">The paramter value.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Security.AuthenticationEvaluator">
            <summary>
            This class provides logic for evaluating whether a user is authenticated.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Security.AuthenticationEvaluator.RequestBackendUserAuthentication">
            <summary>
            Makes sure that the current user is logged on and has rights to access the Sitefinity backend. If not, an exception will be thrown.
            </summary>
            <exception cref="!:WebProtocolException">
            Thrown when the user is not authenticated or does not have permissions to access the Sitefinity backend.
            </exception>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.FrontendService">
            <summary>
            A service that will be invoked by Sitefinity.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.FrontendService.Interfaces">
            <summary>
            Gets the types of the service used to register and resolve the service from the Service Bus.
            </summary>
            <value>The type of the service.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PageDataViewModel">
            <summary>
             Exposes properties data for the current Sitefinity page.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PageDataViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.PageDataViewModel.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>
            The keywords.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.ProfileViewModel">
            <summary>
            Exposes properties data for the current Sitefinity site.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.ProfileViewModel.FirstName">
            <summary>
            Gets or sets the first name of the current user.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.SiteViewModel">
            <summary>
            Exposes properties data for the current Sitefinity site.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Mvc.Helpers.ViewModels.SiteViewModel.Title">
            <summary>
            Gets or sets the title of the current site.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Helpers.SocialShareHelpers.SocialShareOptions(System.Web.Mvc.HtmlHelper)">
            <summary>
            Socials the share options. Redirect to the SocialShare control if exist else render error message
            </summary>
            <param name="helper">The HTML helper.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory">
            <summary>
            This class extends the <see cref="T:Telerik.Sitefinity.Mvc.SitefinityControllerFactory"/> by adding additional virtual paths for controller view engines.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
            <summary>
            Creates the specified controller by using the specified request context.
            </summary>
            <returns>The controller.</returns>
            <param name="requestContext">
            The context of the HTTP request, which includes the HTTP context and route data.
            </param>
            <param name="controllerName">The name of the controller.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="requestContext"/> parameter is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="controllerName"/> parameter is null or empty.
            </exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="cleanManagedResources">If <value>false</value> cleans up native resources, otherwise cleans up both managed and native resources.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver">
            <summary>
            This class implements a resource resolver node that gets resources from the database.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode">
            <summary>
            This class implements a node in a resource resolver chain.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode">
            <summary>
            Classes that implement this interface should act as a node in a resource resolver chain.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode.SetNext(Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode)">
            <summary>
            Sets the next resolver in the chain.
            </summary>
            <param name="resolver">The next resolver.</param>
            <returns>The next resolver.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode.GetFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Gets the available files in the given path.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The path.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode.Next">
            <summary>
            Gets the next resolver in the chain.
            </summary>
            <value>
            The next resolver in the chain.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.Exists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Determines whether a file with the specified virtual path exists.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path to check.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.GetCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            Creates a cache dependency based on the specified virtual paths.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The path to the primary virtual resource.</param>
            <returns>
            A <see cref="T:System.Web.Caching.CacheDependency"/> object for the specified virtual resources.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.Open(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Opens the the file with the specified virtual path.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path of the file to open.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.SetNext(Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode)">
            <summary>
            Sets the next resolver in the chain.
            </summary>
            <param name="resolver">The next resolver.</param>
            <returns>
            The next resolver.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.GetFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.CurrentExists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Determines whether a file with the specified virtual path exists in the current resolver node.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path to check.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.GetCurrentCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            Creates a cache dependency based on the specified virtual path and on the current resolver node.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The path to the virtual resource.</param>
            <param name="virtualPathDependencies">The virtual path dependencies.</param>
            <param name="utcStart">The UTC start.</param>
            <returns>
            A <see cref="T:System.Web.Caching.CacheDependency" /> object for the specified virtual resources.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.CurrentOpen(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Opens the the file with the specified virtual path using the current resolver node.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path of the file to open.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.GetCurrentFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Gets the available files in the given path using the current resolver node.
            </summary>
            <param name="definition">The definition.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.GetAssembly(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition)">
            <summary>
            Gets the assembly which is specified in the PathDefinition.
            </summary>
            <param name="definition">The path definition.</param>
            <exception cref="T:System.InvalidOperationException">Invalid PathDefinition.</exception>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverNode.Next">
            <summary>
            Gets the next resolver in the chain.
            </summary>
            <value>
            The next resolver in the chain.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.CurrentExists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetCurrentCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.CurrentOpen(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetCurrentFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetControlPresentation(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Gets the control presentation that contains the requested resource from the database.
            </summary>
            <param name="virtualPathDefinition">The virtual path definition.</param>
            <param name="virtualPath">The virtual path.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetCacheManager">
            <summary>
            Gets the cache manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetControlPresentationsCacheExpirations">
            <summary>
            Gets the cache item expiration objects for control presentation data items.
            </summary>
            <returns>The cache item expirations.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetViewPaths(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Gets the view paths available for current widget.
            </summary>
            <param name="path">The path.</param>
            <param name="controllers">The controllers.</param>
            <param name="areaName">Name of the area.</param>
            <returns>available view paths</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetControlPresentationItem(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Gets <see cref="T:Telerik.Sitefinity.Pages.Model.ControlPresentation"/> for specific name and area name,
            containg the cpecified <see cref="!:Controller"/> full names.
            </summary>
            <param name="controllers">The controllers.</param>
            <param name="name">The name.</param>
            <param name="areaName">Name of the area.</param>
            <returns><see cref="T:Telerik.Sitefinity.Pages.Model.ControlPresentation"/> item.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetAreaName(System.String)">
            <summary>
            Gets the name of the area.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetDynamicTypeAreaName(System.String,System.String)">
            <summary>
            Gets the area name for dynamic content MVC widget.
            </summary>
            <param name="dynamicModuleName">Name of the dynamic module.</param>
            <param name="dynamicModuleType">Type of the dynamic module.</param>
            <returns>Area name.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.GetControllersFullNames(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition)">
            <summary>
            Gets the full names of <see cref="!:Controller"/>, located in the assembly that is specified in the <see cref="T:Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition"/>.
            </summary>
            <param name="definition">The path definition.</param>
            <returns>The full names of <see cref="!:Controller"/>.</returns>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.DynamicTypeAreaNameTemplate">
            <summary>Template for area name used by dynamic content MVC widget</summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.ViewPathTemplate">
            <summary>Template for view path, consisting of path and file name</summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.existsLock">
            <summary>
            Lock per instance since the cache key depends on the current resolver instance. Multiple instances won't clash.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Resources.Resolvers.DatabaseResourceResolver.getFilesLock">
            <summary>
            Lock per instance since the cache key depends on the current resolver instance. Multiple instances won't clash.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.EmbeddedResourceResolver">
            <summary>
            This class implements a resource resolver node that gets embedded resources from a specified assembly.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.EmbeddedResourceResolver.GetCurrentCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.EmbeddedResourceResolver.CurrentExists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.EmbeddedResourceResolver.CurrentOpen(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.EmbeddedResourceResolver.GetCurrentFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.EmbeddedResourceResolver.GetResourceName(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Gets the resource name based on the virtual path.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver">
            <summary>
            This class implements a resource resolver node that gets resources from the file system.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver"/> class.
            </summary>
            <remarks>By default resource virtual paths are rooted to the web application root folder.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver.#ctor(System.Func{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver"/> class.
            </summary>
            <param name="rootPathResolver">This delegate is used to root the resource virtual paths to a custom folder.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver.GetCurrentCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver.CurrentExists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver.CurrentOpen(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver.GetCurrentFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.FileSystemResourceResolver.GetFileName(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Gets the filename of the requested resource.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverStrategy">
            <summary>
            Classes of that implement this interface should implement a strategy for handling resource resolving.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverStrategy.SetFirst(Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode)">
            <summary>
            Sets the first resolver in the chain.
            </summary>
            <param name="resolver">The first resolver in the chain.</param>
            <returns>The first resolver in the chain.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverStrategy.GetFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Gets the available files in the given path.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The path.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverStrategy.First">
            <summary>
            Gets the first resolver.
            </summary>
            <value>
            The first resolver.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualFileResolver">
            <summary>
            This class is responsible for locating and resolving of the Layouts.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualFileResolver.ResolverPath">
            <summary>
            The resolver path.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualFileResolver.Exists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Determines whether a file with the specified virtual path exists.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path to check.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualFileResolver.Open(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Opens the the file with the specified virtual path.
            </summary>
            <param name="virtualPath">The virtual path of the file to open.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualFileResolver.GetCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            Creates a cache dependency based on the specified virtual paths.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The path to the primary virtual resource.</param>
            <returns>
            A <see cref="T:System.Web.Caching.CacheDependency"/> object for the specified virtual resources.
            </returns>
        </member>
        <member name="F:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Layouts.LayoutVirtualFileResolver.virtualPathBuilder">
            <summary>
            The virtual path builder instance
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolver">
            <summary>
            This class is responsible for resolving resource virtual files.
            </summary>
            <remarks>
            This class is registered as a virtual file resolver in Sitefinity's VirtualPathManager.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolver.Exists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Determines whether a file with the specified virtual path exists.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The virtual path to check.</param>
            <returns>bool result</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolver.GetCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            Creates a cache dependency based on the specified virtual paths.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The path to the primary virtual resource.</param>
            <returns>
            A <see cref="T:System.Web.Caching.CacheDependency"/> object for the specified virtual resources.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolver.Open(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Opens the the file with the specified virtual path.
            </summary>
            <param name="virtualPath">The virtual path of the file to open.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy">
            <summary>
            This class implements a strategy for handling resource resolving.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.SetFirst(Telerik.Sitefinity.Frontend.Resources.Resolvers.IResourceResolverNode)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.Exists(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Determines whether a file with the specified virtual path exists.
            </summary>
            <param name="virtualPath">The virtual path to check.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.GetCacheDependency(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            Creates a cache dependency based on the specified virtual paths.
            </summary>
            <param name="definition">The definition.</param>
            <param name="virtualPath">The path to the primary virtual resource.</param>
            <returns>
            A <see cref="T:System.Web.Caching.CacheDependency"/> object for the specified virtual resources.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.Open(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <summary>
            Opens the the file with the specified virtual path.
            </summary>
            <param name="virtualPath">The virtual path of the file to open.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.GetFiles(Telerik.Sitefinity.Abstractions.VirtualPath.PathDefinition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.InitializeChain">
            <summary>
            Initializes the chain with the default nodes.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Resources.Resolvers.ResourceResolverStrategy.First">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder">
            <summary>
            This class contains methods that define the virtual paths of assemblies.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder.GetVirtualPath(System.Type)">
            <summary>
            Gets the virtual path of the assembly of a type.
            </summary>
            <param name="controllerName">Type.</param>
            <exception cref="T:System.ArgumentNullException">type</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder.GetVirtualPath(System.Reflection.Assembly)">
            <summary>
            Gets the virtual path of the specified assembly.
            </summary>
            <param name="assembly">The controller container.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder.GetVirtualPath(System.String)">
            <summary>
            Gets the virtual path of the specified assembly.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">path</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder.GetPathDefinition(System.Reflection.Assembly)">
            <summary>
            Gets the path definition for the given assembly that is used by the virtual file resolvers.
            </summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder.RemoveParams(System.String)">
            <summary>
            Removes the parameters from the virtual path. This will strip everything after the "#".
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder.AddParams(System.String,System.String)">
            <summary>
            Adds the parameters.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <param name="pathParams">The path parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Resources.VirtualPathBuilder.MapPath(System.String)">
            <summary>
            Maps virtual path to physical path on the server.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>The physical path on the server specified by virtualPath.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer">
            <summary>
            This class contains logic for locating and initializing controllers.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.Initialize">
            <summary>
            Initializes the controllers that are available to the web application.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.RetrieveAssemblies">
            <summary>
            Gets the assemblies that are marked as controller containers with the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.ControllerContainerAttribute"/> attribute.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.InitializeControllerContainer(System.Reflection.Assembly)">
            <summary>
            Executes the initialization method specified in the <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.Attributes.ControllerContainerAttribute"/> attribute.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.LoadAssembly(System.String)">
            <summary>
            Loads the assembly file into the current application domain.
            </summary>
            <param name="assemblyFileName">Name of the assembly file.</param>
            <returns>The loaded assembly</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.RegisterVirtualPaths(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Registers virtual paths for the given <paramref name="assemblies"/>.
            </summary>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.GetControllers(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Gets the controllers from the given <paramref name="assemblies"/>.
            </summary>
            <param name="assemblies">The assemblies.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.InitializeControllers(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Initializes the specified <paramref name="controllers"/> by ensuring they have their proper registrations in the toolbox and that the controller factory will be able to resolve them.
            </summary>
            <param name="controllers">The controllers.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.RegisterControllerFactory">
            <summary>
            Registers <see cref="T:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.FrontendControllerFactory"/>
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.RegisterController(System.Type)">
            <summary>
            Registers the controller so its views and resources can be resolved.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.RetrieveAssembliesFileNames">
            <summary>
            Gets the assemblies file names that will be inspected for controllers.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.IsControllerContainer(System.String)">
            <summary>
            Determines whether the given <paramref name="assemblyFileName"/> is an assembly file that is marked as <see cref="!:ContainerControllerAttribute"/>.
            </summary>
            <param name="assemblyFileName">Filename of the assembly.</param>
            <returns>True if the given file name is of an assembly file that is marked as <see cref="!:ContainerControllerAttribute"/>, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.ReplaceControllerFactory">
            <summary>
            Replaces the current controller factory used by the MVC framework with the factory that is registered by Sitefinity.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.InitializeCustomRouting">
            <summary>
            Registers types of the custom routing.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.IsTemplatableControl(System.Type)">
            <summary>
            Determines whether the specified controller is allowed template registration
            </summary>
            <param name="controllerType">Type of the controller.</param>
            <returns>
              <c>true</c> if specified controller is allowed template registration; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.RegisterTemplateableControls(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Registers MVC widgets as templatable controls
            </summary>
            <param name="controllerTypes">The controller types.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ControllerContainerInitializer.RegisterStringResources(System.Type)">
            <summary>
            Registers the controller string resources.
            </summary>
            <param name="controller">Type of the controller.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector">
            <summary>
            This class holds all methods internaly exposed by the CommentsUtilities class in sf.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.GetUseCaptiaSetting">
            <summary>
            Gets the use captia setting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.GetAuthor(Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest)">
            <summary>
            Gets the author.
            </summary>
            <param name="commentData">The comment data.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.GetIpAddressFromCurrentRequest">
            <summary>
            Gets the ip address from current request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.GetCommentsByThreadForCurrentAuthorWithRating(System.String)">
            <summary>
            Gets the comments by thread for current author with rating.
            </summary>
            <param name="threadKey">The thread key.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.GetThreadConfigByType(System.String)">
            <summary>
            Gets the type of the thread configuration by.
            </summary>
            <param name="threadType">Type of the thread.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.GetCommentResponse(Telerik.Sitefinity.Services.Comments.IComment,System.Boolean)">
            <summary>
            Gets the comment response.
            </summary>
            <param name="comment">The comment.</param>
            <param name="includeSensitiveInformation">if set to <c>true</c> [include sensitive information].</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.CommentsSettingsElement">
            <summary>
            This class holds all needed properties for the <see cref="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsWebService"/>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.CommentsSettingsElement.AllowComments">
            <summary>
            Gets or sets a value indicating if content item supports comments.
            </summary>
            <value>
            	<c>true</c> if content item supports comments; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.CommentsSettingsElement.EnableRatings">
            <summary>
            Gets or sets a value indicating whether to restrict ratings to one from user by thread.
            </summary>
            <value>
            When set to <c>true</c> the comments are restricted to one from user by thread; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.CommentsSettingsElement.RequiresAuthentication">
            <summary>
            Gets or sets whether threads on the commentable type require authentication by default.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsUtilitiesReflector.CommentsSettingsElement.RequiresApproval">
            <summary>
            Gets or sets whether threads on the commentable type require approval by default.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsWebServiceReflector">
            <summary>
            This class holds all methods privatly exposed by the CommentWebService class in sf.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsWebServiceReflector.Validate(Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest)">
            <summary>
            Validates the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsWebServiceReflector.Validate(Telerik.Sitefinity.Services.Comments.DTO.ThreadCreateRequest)">
            <summary>
            Validates the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsWebServiceReflector.Validate(Telerik.Sitefinity.Services.Comments.DTO.GroupCreateRequest)">
            <summary>
            Validates the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.CommentsWebServiceReflector.ValidatePostRequest(System.String,Telerik.Sitefinity.Services.Comments.DTO.CaptchaInfo,System.Boolean)">
            <summary>
            Validates the post request.
            </summary>
            <param name="threadType">Type of the thread.</param>
            <param name="captchaInfo">The captcha information.</param>
            <param name="skipCaptia">if set to <c>true</c> [skip captia].</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest">
            <summary>
            <c>CommentCreateRequest</c> Represents the <see cref="!:IComment"/> object that should be created.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.Message">
            <summary>
            Gets or sets the body of the message of the <see cref="!:IComment"/> object.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.Name">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object author name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.Email">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object author email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.CustomData">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object custom data.
            </summary>
            <remarks>
            This custom data is extensibility point that can be used to store some custom data for the <see cref="!:IComment"/> object.
            </remarks>
            <value>
            The custom data.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.ThreadKey">
            <summary>
            Gets or sets the key of the <see cref="!:IThread"/> object that the <see cref="!:IComment"/> object is associated with.
            </summary>
            <value>
            The thread key.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.Thread">
            <summary>
            Gets or sets the thread information when the parent thread should be created for this <see cref="!:IComment"/>.
            </summary>
            <value>
            The thread.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.Captcha">
            <summary>
            Gets or sets the captcha information.
            </summary>
            <value>
            The captcha data.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest.Rating">
            <summary>
            Gets or sets the rating data.
            </summary>
            <remarks>
            This rating data is used in the context of reviews behaviour
            </remarks>
            <value>
            The captcha data.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.AuthorAlreadyReviewedGetRequest">
            <summary>
            The DTO used by <see cref="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsWebService"/>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.AuthorAlreadyReviewedGetRequest.ThreadKey">
            <summary>
            Gets or sets the thread key.
            </summary>
            <value>
            The thread key.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.AuthorAlreadyReviewedViewModel">
            <summary>
            The view model used by <see cref="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsWebService"/>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.AuthorAlreadyReviewedViewModel.AuthorAlreadyReviewed">
            <summary>
            Gets or sets a value indicating whether author already reviewed.
            </summary>
            <value>
            <c>true</c> if [author already reviewed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel">
            <summary>
            <c>CommentResponse</c>. Represents the <see cref="!:IComment"/> object that should be returned.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.Key">
            <summary>
            Gets or sets the key of the <see cref="!:IComment"/> object.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.Name">
            <summary>
            Gets or sets the name of the author of the <see cref="!:IComment"/> object.
            </summary>
            <value>
            The name of the author.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.Message">
            <summary>
            Gets or sets the body of the message of the <see cref="!:IComment"/> object.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.DateCreated">
            <summary>
            Gets or sets the date when the <see cref="!:IComment"/> object was created.
            </summary>
            <value>
            The date created.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.ProfilePictureUrl">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object author profile picture URL.
            </summary>
            <value>
            The profile picture URL.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.ProfilePictureThumbnailUrl">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object author profile picture thumbnail URL.
            </summary>
            <value>
            The profile picture thumbnail URL.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.Status">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.Email">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object author email.
            This is sensitive information that is returned if the request is made from authenticated backend user.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.ThreadKey">
            <summary>
            Gets or sets the key of the <see cref="!:IThread"/> object that the <see cref="!:IComment"/> object is associated with.
            </summary>
            <value>
            The thread key.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.AuthorIpAddress">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object author IP address.
            This is sensitive information that is returned if the request is made from authenticated backend user.
            </summary>
            <value>
            The author ip address.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.CustomData">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object custom data.
            </summary>
            <remarks>
            This custom data is an extensibility point that can be used to store custom data for the <see cref="!:IComment"/> object.
            </remarks>
            <value>
            The custom data.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel.Rating">
            <summary>
            Gets or sets the <see cref="!:IComment"/> object rating.
            </summary>
            <remarks>
            This rating field is used in the context of reviews behaviour.
            </remarks>
            <value>
            The custom data.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsServiceStackPlugin">
            <summary>
            Represents a ServiceStack plug-in for the reviews web service.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsServiceStackPlugin.Register(ServiceStack.IAppHost)">
            <summary>
            Adding the comments reviews routes
            </summary>
            <param name="appHost">The service stack appHost</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsWebService">
            <summary>
            This class provides reviews status.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsWebService.Get(Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.AuthorAlreadyReviewedGetRequest)">
            <summary>
            Gets if the author already has review for current thread.
            </summary>
            <param name="request">The reviews get request.</param>
            <returns>
            <see cref="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.AuthorAlreadyReviewedViewModel"/> object.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ReviewsService.ReviewsWebService.Post(Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewPostRequest)">
            <summary>
            Creates a comment or review.
            </summary>
            <param name="request">The create comment review post request.</param>
            <returns>
            <see cref="T:Telerik.Sitefinity.Frontend.Services.ReviewsService.DTO.CreateCommentReviewViewModel"/> object.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesItemViewModel">
            <summary>
            A single file item view model used by <see cref="T:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesViewModel"/>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesItemViewModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesItemViewModel.IsFolder">
            <summary>
            Gets or sets a value indicating whether this instance is folder.
            </summary>
            <value>
              <c>true</c> if this instance is folder; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesItemViewModel.HasChildren">
            <summary>
            Gets or sets a value indicating whether the item has children.
            </summary>
            <value>
              <c>true</c> if the item has children; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesViewModel">
            <summary>
            The view model
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesViewModel.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesViewModel.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.FilesService.FilesServiceStackPlugin">
            <summary>
            Represents a ServiceStack plug-in for the Files web service.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.FilesService.FilesServiceStackPlugin.Register(ServiceStack.IAppHost)">
            <summary>
            Adding the files service routes
            </summary>
            <param name="appHost">The service stack appHost</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ListsService.DTO.SpecificListsGetRequest">
            <summary>
            <c>SpecificListsGetRequest</c>Represents a filter for retrieving a specific items of list objects.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ListsService.DTO.SpecificListsGetRequest.Ids">
            <summary>
            Gets or sets the list ids.
            </summary>
            <value>The list ids.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.ListsService.DTO.SpecificListsGetRequest.Provider">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>The name of the provider.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesGetRequest">
            <summary>
            The DTO used by <see cref="T:Telerik.Sitefinity.Frontend.Services.FilesService.FilesWebService"/>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesGetRequest.Path">
            <summary>
            Gets or sets the parent path (or null if root).
            </summary>
            <value>
            The parent path.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesGetRequest.Extension">
            <summary>
            Gets or sets the file extension.
            </summary>
            <value>
            The file extension.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesGetRequest.Skip">
            <summary>
            Gets or sets the skip.
            </summary>
            <value>
            The skip.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesGetRequest.Take">
            <summary>
            Gets or sets the take.
            </summary>
            <value>
            The take.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.FilesService.FilesWebService">
            <summary>
            This class provides file retrieval by extension.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.FilesService.FilesWebService.Get(Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesGetRequest)">
            <summary>
            Gets specific directories and files depending on the requested file extension and parent path.
            </summary>
            <param name="filesRequest">The files requests object from which the request parameters to be retrieved.</param>
            <returns>        
            An <see cref="T:Telerik.Sitefinity.Frontend.Services.FilesService.DTO.FilesViewModel"/> object.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ListsService.ListsServiceStackPlugin">
            <summary>
            Represents a ServiceStack plug-in for the Lists web service.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ListsService.ListsServiceStackPlugin.Register(ServiceStack.IAppHost)">
            <summary>
            Adding the lists service routes
            </summary>
            <param name="appHost">The service stack appHost</param>
        </member>
        <member name="T:Telerik.Sitefinity.Frontend.Services.ListsService.ListsWebService">
            <summary>
            This class provides methods, which are not currently presented in Sitefinity ListService.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Frontend.Services.ListsService.ListsWebService.Put(Telerik.Sitefinity.Frontend.Services.ListsService.DTO.SpecificListsGetRequest)">
            <summary>
            Get specifi lists based on provided ids and provider name.
            </summary>
            <param name="listsRequest">
            The list requests object from which the content ought to be retrieved.
            </param>
            <returns>        
            An enumerable oflist view model objects.
            </returns>
        </member>
    </members>
</doc>
