@model Telerik.Sitefinity.Frontend.EmailCampaigns.Mvc.Models.UnsubscribeForm.UnsubscribeFormViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Modules.Pages;

@*Add scripts and stylesheets*@
@Html.Script(ScriptRef.JQuery, "top", false)
@Html.Script(ScriptRef.JQueryValidate, "top", false)
@Html.Script(Url.WidgetContent("Mvc/Scripts/JQueryValidate/jquery.validate.unobtrusive.min.js"), "top", false)
@{
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
}

<div class="@Model.CssClass">   
    @using (Html.BeginFormSitefinity("Unsubscribe", "UnsubscribeForm"))
    {        
        <h3>@Model.WidgetTitle</h3>
            
        <p>@Model.WidgetDescription</p>
        
        if (ViewBag.IsSucceded == true)
        {
            <div>@Html.HtmlSanitize(Model.Message)</div>
        }
        
        @Html.ValidationSummary(true)
            
        if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            <div>
                @ViewBag.Error
            </div>
        }
        
        <div>
            <label>
                @Html.Resource("Email")
                @Html.TextBoxFor(u => u.Email)
            </label>
            <input type="submit" value="@Html.Resource("ButtonUnsubscribe")" @(SystemManager.IsDesignMode ? "disabled" : "") />
            
            @Html.ValidationMessageFor(u => u.Email)
            
            @Html.AddSitefinityAntiforgeryToken()

        </div>
    }
</div>