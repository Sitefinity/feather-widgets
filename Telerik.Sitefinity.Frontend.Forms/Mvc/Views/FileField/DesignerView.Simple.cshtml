@using Telerik.Sitefinity.Frontend.Forms.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.TextField;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Mvc;

<tabset class="nav-tabs-wrapper">
    <tab heading="@Html.Resource("LabelAndText")">
    
        <div class="form-group">

            <label for="title">
                @Html.Resource("Label")
            </label>
            <div class="row">
                <div class="col-xs-6">
                    <input id="title" type="text" ng-model="properties.Model.MetaField.Title.PropertyValue" class="form-control" />
                </div>
            </div>
            <p class="text-muted">@Html.Resource("ExampleTitle")</p>
        </div>


        <div class="form-group form-group--tall">
            <a ng-show="!showInstructionalText" ng-click="showInstructionalText=true;">@Html.Resource("AddInstructionalText")</a>

            <div ng-show="showInstructionalText">
                <label for="example">
                    @Html.Resource("InstructionalText")
                </label>
                <div class="row">
                    <div class="col-xs-9">
                        <textarea id="example" ng-model="properties.Model.MetaField.Description.PropertyValue" class="form-control"/>
                        <p class="text-muted">@Html.Resource("ExampleExplanation")</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group-list">
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" ng-model="properties.Model.IsRequired.PropertyValue" 
                            ng-true-value="'True'" ng-false-value="'False'" ng-checked="properties.Model.IsRequired.PropertyValue === 'True'" >
                            @Html.Resource("RequiredField")
                        </input>
                    </label>
                </div>
            </div>

            <div class="form-group" ng-show="properties.Model.IsRequired.PropertyValue === 'True'">
                <label for="example" >
                    @Html.Resource("FieldRequiredErrorMessageTitle")
                </label>
                <input type="text" id="example" ng-model="properties.Model.RequiredViolationMessage.PropertyValue" class="form-control" />
            </div>
        </div>

        <expander expander-title='@Html.Resource("MoreOptions")'>
            <div class="form-group">
                <label for="textFieldTemplateName">@Html.Resource("Template")</label>

                <div class="row">
                    <div class="col-xs-6">
                        <select id="textFieldTemplateName" ng-model="properties.WriteTemplateName.PropertyValue" class="form-control">
                            @foreach (var viewName in Html.GetViewNames(((Telerik.Sitefinity.Mvc.Proxy.MvcProxyBase)Model).GetController(), @"^Write\.(?<viewName>[\w\s]*)$"))
                            {
                                <option value="@viewName">@viewName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <style-dropdown selected-class="properties.Model.CssClass.PropertyValue" view-name="properties.WriteTemplateName.PropertyValue"></style-dropdown>

            <div class="form-group">
                <label for="cssClass">@Html.Resource("CssClasses")</label>
                <input type="text" id="cssClass" ng-model="properties.Model.CssClass.PropertyValue" class="form-control" />
            </div>
        </expander>
    </tab>

    <tab heading="@Html.Resource("Limitations")">
        <div class="form-group">
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" ng-model="properties.Model.AllowMultipleFiles.PropertyValue" 
                            ng-true-value="'True'" ng-false-value="'False'" ng-checked="properties.Model.AllowMultipleFiles.PropertyValue === 'True'" >
                            @Html.Resource("AllowMultipleFiles")
                        </input>
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">

            <strong>@Html.Resource("Range")</strong>

            <div class="row row-xs">
                <div class="col-xs-2">
                    <label for="minLength">@Html.Resource("Min")</label>
                </div>
                <div class="col-xs-2">
                    <label for="maxLength">@Html.Resource("Max")</label>
                </div>
            </div>

            <div class="row row-xs">

                <div class="col-xs-2">
                    <input type="text" id="minLength" ng-model="properties.Model.MinFileSizeInMb.PropertyValue" class="form-control" />
                </div>

                <div class="col-xs-2">
                    <input type="text" id="maxLength" ng-model="properties.Model.MaxFileSizeInMb.PropertyValue" class="form-control" />
                </div>

                <div class="col-xs-8">
                    @Html.Resource("MB")
                </div>
            </div>
        </div>

        <div class="form-group">
            <label for="tooLarge">@Html.Resource("FileTooLargeErrorMessageTitle")</label>
            <input type="text" id="tooLarge" ng-model="properties.Model.FileSizeViolationMessage.PropertyValue" class="form-control" />
        </div>

        <div class="form-group">
            <strong>@Html.Resource("AllowedFileTypes")</strong>
            <div class="radio">
                <label>
                    <input type="radio" ng-model="state.fileTypeRadioSelection" value="All" />
                    @Html.Resource("AllFileTypes")
                </label>
            </div>
            <div class="radio">
                <label>
                    <input type="radio" ng-model="state.fileTypeRadioSelection" value="Selected" />
                    @Html.Resource("SelectedFileTypes")

                    <div ng-show="state.fileTypeRadioSelection === 'Selected'">
               
                        <div ng-repeat="typeCategory in fileTypeCategories" class="checkbox">
                            <label>
                                <input type="checkbox" value="{{typeCategory.value}}" ng-checked="state.selectedFileTypeCategories.indexOf(typeCategory.value) > -1" ng-click="toggleSelection(typeCategory.value)"> {{typeCategory.title}} 
                                <span class="text-muted" ng-if="typeCategory.description">{{typeCategory.description}}</span>
                            </label>
                        </div>

                        <div ng-show="state.selectedFileTypeCategories.indexOf('Other') > -1" class="label-content">
                            <input type="text" class="form-control" ng-model="state.commaSeparatedFileTypes" />
                            <small class="text-muted">@Html.Resource("FileTypesSeparationDescription")</small>
                            <br />
                            <small class="text-muted">@Html.Resource("FileTypesExample")</small>
                        </div>

                    </div>
                </label>
            </div>

        </div>

        <div ng-show="state.fileTypeRadioSelection === 'Selected'" class="form-group">
            <label>
                @Html.Resource("FileTypeViolationMessageDescription")
                </label>
                <input class="form-control" type="text" ng-model="properties.Model.FileTypeViolationMessage.PropertyValue" />
        </div>
    </tab>
</tabset>

