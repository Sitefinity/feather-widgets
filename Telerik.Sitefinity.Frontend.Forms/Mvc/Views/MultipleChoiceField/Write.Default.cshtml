@model Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.MultipleChoiceField.MultipleChoiceFieldViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@Html.Script(ScriptRef.JQuery, "top", false)
@{
    var fieldName = string.IsNullOrEmpty(Model.MetaField.FieldName) ? "multiple-choice-field-name" : Model.MetaField.FieldName;
    var requiredAttributes = MvcHtmlString.Create(Model.ValidationAttributes);
}
<div class="@Model.CssClass sf-fieldWrp sf-RadioButtons" data-sf-role="multiple-choice-field-container">
    <input type="hidden" data-sf-role="violation-messages" value='{ "required": "@Model.RequiredViolationMessage", "maxLength":"@Model.MaxLengthViolationMessage" }' />
    <strong>@Model.MetaField.Title</strong>

    @if (!string.IsNullOrEmpty(Model.MetaField.Description))
    {
        <p>@Model.MetaField.Description</p>
    }

    @foreach (var choice in Model.Choices)
    {
        string value = !string.IsNullOrEmpty(Model.Value as string) ? Model.Value as string : string.Empty;
        bool isSelected = (!string.IsNullOrEmpty(value) && choice == value) ||
                          (string.IsNullOrEmpty(value) && !Model.IsRequired && choice == Model.MetaField.DefaultValue as string);

        var selctedAttributes = isSelected ? "checked" : string.Empty;
        <div>
            <label>
                @{
                    var val = choice;
                    if (val.Length > 255)
                    {
                        val = val.Substring(0, 255);
                    }
                }
                <input type="radio" name="@fieldName" value="@val" data-sf-role="multiple-choice-field-input" @selctedAttributes @requiredAttributes />
                @choice
            </label>
        </div>
    }
    @if (Model.HasOtherChoice)
    {
        <div>
            <label>
                <input type="radio" name="@fieldName" data-sf-multiple-choice-role="other-choice-radio" data-sf-role="multiple-choice-field-input" />
                @Html.Resource("Other")
            </label>
            <input type="hidden" data-sf-multiple-choice-role="other-choice-text" />
        </div>

    }
    <p data-sf-role="error-message" role="alert" aria-live="assertive"></p>
</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/Form/form.all.js"), "bottom", false)