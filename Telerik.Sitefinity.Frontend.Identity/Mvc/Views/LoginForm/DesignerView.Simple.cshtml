@using Telerik.Sitefinity.Configuration;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Security.Claims;

<form>
    <div class="alert alert-warning" ng-show="properties.AllowResetPassword.PropertyValue === 'True' && properties.EnablePasswordRetrieval.PropertyValue === 'False' && properties.EnablePasswordReset.PropertyValue === 'False'">
        @Html.Resource("PaswordResetNotEnabled")
    </div>
   
    <div class="form-group">
        <label>@Html.Resource("LoginFormTemplate")</label>
        <div class="checkbox">
            <label>
                <input type="checkbox" ng-model="properties.ShowRememberMe.PropertyValue" ng-true-value="'True'" ng-false-value="'False'" ng-checked="properties.ShowRememberMe.PropertyValue === 'True'" />
                @Html.Resource("ShowRememberMe")
            </label>
        </div>

        <div class="checkbox">
            <label for="allow-reset-password-checkbox">
                <input id="allow-reset-password-checkbox" type="checkbox" ng-model="properties.AllowResetPassword.PropertyValue" ng-true-value="'True'" ng-false-value="'False'" ng-checked="properties.AllowResetPassword.PropertyValue === 'True'" />
                @Html.Resource("AllowResetPassword")
            </label>
        </div>
    </div>

    <div class="form-group">
        <label>@Html.Resource("LandingPageAfterLoginInfo")</label>
        <sf-list-selector
            sf-page-selector
            sf-selected-item-id="properties.LoginRedirectPageId.PropertyValue"></sf-list-selector>
    </div>

    @{
        var providers = ClaimsManager.CurrentAuthenticationModule.ExternalAuthenticationProviders.Where(x => x.Enabled == true && !string.IsNullOrEmpty(x.Name)).ToList();
        if (providers.Count() != 0)
        {
            <div class="form-group">
                <strong>@Html.Resource("ExternalProvidersLoginOptions")</strong>
                @foreach (var provider in providers)
                {
                    <div class="checkbox">
                        <label>
                            <input id="@provider.Title"
                                   type="checkbox"
                                   ng-change="updateExternalProvider('@provider.Title', '@provider.LinkCssClass', externalProviderSelector.selectedItems['@provider.Name'])"
                                   ng-checked="externalProviderSelector.selectedItems['@provider.Title']"
                                   ng-model="externalProviderSelector.selectedItems['@provider.Title']" />
                            @provider.Title
                        </label>
                    </div>
                }
            </div>
        }
    }

    <div class="form-group">
        <label>@Html.Resource("RegistrationPage")</label>
        <p class="description-note">@Html.Resource("RegistrationPageInfo")</p>
        <sf-list-selector sf-page-selector
                          sf-selected-item-id="properties.RegisterRedirectPageId.PropertyValue"></sf-list-selector>
    </div>

    <div class="row">
        <div class="col-xs-6">

            <div class="form-group">
                <h5>@Html.Resource("Templates")</h5>
                <label for="templateNameLoginForm">@Html.Resource("LoginFormTemplate")</label>
                <select id="templateNameLoginForm" ng-model="properties.LoginFormTemplate.PropertyValue" class="form-control">
                    @foreach (var viewName in Html.GetViewNames("LoginForm", @"LoginForm\.(?<viewName>\w*)$"))
                    {
                        <option value="@viewName"> @viewName.SplitCamelCase()</option>
                    }
                </select>
            </div>

            <div class="form-group-list" ng-show="properties.EnablePasswordRetrieval.PropertyValue === 'True' || properties.EnablePasswordReset.PropertyValue === 'True'">
                <div class="form-group" ng-show="properties.AllowResetPassword.PropertyValue === 'True'">
                    <label for="templateNameForgotPassword">@Html.Resource("ForgotPasswordTemplate")</label>
                    <select id="templateNameForgotPassword" ng-model="properties.ForgotPasswordTemplate.PropertyValue" class="form-control">
                        @foreach (var viewName in Html.GetViewNames("LoginForm", @"ForgotPassword\.(?<viewName>\w*)$"))
                        {
                            <option value="@viewName"> @viewName.SplitCamelCase()</option>
                        }
                    </select>
                </div>

                <div class="form-group" ng-show="properties.AllowResetPassword.PropertyValue === 'True'">
                    <label for="templateNameResetPassword">@Html.Resource("ResetPasswordTemplate")</label>
                    <select id="templateNameResetPassword" ng-model="properties.ResetPasswordTemplate.PropertyValue" class="form-control">
                        @foreach (var viewName in Html.GetViewNames("LoginForm", @"ResetPassword\.(?<viewName>\w*)$"))
                        {
                            <option value="@viewName"> @viewName.SplitCamelCase()</option>
                        }
                    </select>
                </div>
            </div>

        </div>
    </div>

    <expander expander-title='@Html.Resource("MoreOptions")'>
        <style-dropdown selected-class="properties.CssClass.PropertyValue" view-name="properties.LoginFormTemplate.PropertyValue"></style-dropdown>

        <div class="form-group">
            <label for="loginStatusCssClass">@Html.Resource("CssClasses")</label>
            <input type="text" id="loginStatusCssClass" ng-model="properties.CssClass.PropertyValue" class="form-control" />
        </div>
    </expander>
</form>
