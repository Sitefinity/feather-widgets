@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Identity.Mvc.Models.Profile;
@using Telerik.Sitefinity.Security;

@{
    if (!LoginUtils.AreSmtpSettingsSet)
    {
        <div class="alert alert-warning" ng-show="properties.ChangeEmailConfirmation === 'True'">
            @Html.Resource("NoSmtpForConfirmationEmailIsSet", "ErrorMessages")
        </div>
    }
}

<div class="form-group nav-wrapper">
	<label class="radio-inline">
		<input type="radio" ng-model="properties.Mode.PropertyValue" value="EditOnly" />
		@Html.Resource("EditModeOnly")
	</label>

	<label class="radio-inline">
		<input type="radio" ng-model="properties.Mode.PropertyValue" value="ReadOnly" />
		@Html.Resource("ReadModeOnly")
	</label>

    <label class="radio-inline">
		<input type="radio" ng-model="properties.Mode.PropertyValue" value="Both" />
		@Html.Resource("BothModes")
	</label>
</div>

<div ng-show="properties.Mode.PropertyValue==='EditOnly'">
    <div class="form-group">
        <strong>@Html.Resource("WhenChangesAreSaved")</strong>
        <div class="radio">
            <label>
                <input type="radio" ng-model="properties.SaveChangesAction.PropertyValue" value="ShowMessage">
                @Html.Resource("ShowMsg")
            </label>
        </div>
        <div class="radio">
            <label>
                <input type="radio" ng-model="properties.SaveChangesAction.PropertyValue" value="ShowPage">
                @Html.Resource("OpenPage")
            </label>
        </div>
        <sf-list-selector class="label-content"
                          sf-page-selector
                          sf-selected-item-id="properties.ProfileSavedPageId.PropertyValue"
                          ng-show="properties.SaveChangesAction.PropertyValue==='ShowPage'"></sf-list-selector>
    </div>

    <div class="form-group">
        <label for="templateName">@Html.Resource("Template")</label>
        <div class="row">
            <div class="col-xs-6">
                <select id="templateName" ng-model="properties.EditModeTemplateName.PropertyValue" class="form-control">
                        @foreach (var viewName in Html.GetViewNames("Profile", @"Edit\.(?<viewName>\w*)$"))
                    {
                        <option value="@viewName"> @viewName.SplitCamelCase()</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="checkbox">
            <label for="changeEmailConfirmation">
                <input id="changeEmailConfirmation" type="checkbox" ng-model="properties.ChangeEmailConfirmation.PropertyValue"
                       ng-true-value="'True'" ng-false-value="'False'" />
                @Html.Resource("ConfirmChangeEmail")
            </label>
        </div>
    </div>
</div>

<div ng-show="properties.Mode.PropertyValue==='ReadOnly'">
    <div class="form-group">
        <label for="templateName">@Html.Resource("Template")</label>
        <div class="row">
            <div class="col-xs-6">
                <select id="templateName" ng-model="properties.ReadModeTemplateName.PropertyValue" class="form-control">
                        @foreach (var viewName in Html.GetViewNames("Profile", @"Read\.(?<viewName>\w*)$"))
                    {
                        <option value="@viewName"> @viewName.SplitCamelCase()</option>
                    }
                </select>
            </div>
        </div>
    </div>
</div>

<div ng-show="properties.Mode.PropertyValue==='Both'">
    <div class="form-group">
        <strong>@Html.Resource("WhenChangesAreSaved")</strong>
        <div class="radio">
            <label>
                <input type="radio" ng-model="properties.SaveChangesAction.PropertyValue" value="SwitchToReadMode">@Html.Resource("SwitchToReadMode")
            </label>
        </div>
        <div class="radio">
            <label>
                <input type="radio" ng-model="properties.SaveChangesAction.PropertyValue" value="ShowMessage">@Html.Resource("ShowMsg")
            </label>
        </div>
        <div class="radio">
            <label>
                <input type="radio" ng-model="properties.SaveChangesAction.PropertyValue" value="ShowPage">@Html.Resource("OpenPage")
            </label>
        </div>
        <sf-list-selector
            class="label-content"
            sf-page-selector
            sf-selected-item-id="properties.ProfileSavedPageId.PropertyValue"
            ng-show="properties.SaveChangesAction.PropertyValue==='ShowPage'"></sf-list-selector>
    </div>

    <div class="form-group-list">
        <h5>@Html.Resource("Templates")</h5>
        <div class="form-group">
            <label for="templateName">@Html.Resource("Profile")</label>
            <div class="row">
                <div class="col-xs-6">
                    <select id="templateName" ng-model="properties.ReadModeTemplateName.PropertyValue" class="form-control">
                            @foreach (var viewName in Html.GetViewNames("Profile", @"Read\.(?<viewName>\w*)$"))
                        {
                            <option value="@viewName"> @viewName.SplitCamelCase()</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label for="templateName">@Html.Resource("EditingProfile")</label>
            <div class="row">
                <div class="col-xs-6">
                    <select id="templateName" ng-model="properties.EditModeTemplateName.PropertyValue" class="form-control">
                            @foreach (var viewName in Html.GetViewNames("Profile", @"Edit\.(?<viewName>\w*)$"))
                        {
                            <option value="@viewName"> @viewName.SplitCamelCase()</option>
                        }
                    </select>
                </div>
            </div>
        </div>

    </div>

</div>

<expander expander-title='@Html.Resource("MoreOptions")'>
    <style-dropdown selected-class="properties.CssClass.PropertyValue" view-name="properties.ReadModeTemplateName.PropertyValue"></style-dropdown>

    <div class="form-group">
        <label >@Html.Resource("CssClasses")</label>
        <input type="text" ng-model="properties.CssClass.PropertyValue" class="form-control" />
    </div>
</expander>