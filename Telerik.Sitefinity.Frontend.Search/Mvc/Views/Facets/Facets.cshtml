@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.FacetsWidgetViewModel
@using System;
@using System.Globalization;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Publishing.PublishingPoints;

@{
    const int defaultFacetsCollapseCount = 10;
}

<div id="facetContainer">
    @if (ViewBag.HasAnyFacetElements)
    {
        <h3>@Model.FilterResultsLabel</h3>

        <label>@Model.AppliedFiltersLabel</label>
        <button id="sf-facet-clear-all-btn" hidden>@Model.ClearAllLabel</button>

        <div id="applied-filters" data-sf-applied-filter-html-tag="" data-sf-filter-label-css-class="" data-sf-remove-filter-css-class="">
        </div>
    }

<div id="facetContent">
    @foreach (var facet in Model.SearchFacets)
    {
        var value = 0;
        if (facet.FacetElements.Any() || facet.ShowNumberCustomRange || facet.ShowDateCustomRanges)
        {
            <h4>@facet.FacetTitle</h4>
            <ul id="facets-group-list-@facet.FacetFieldName" data-facet-type="@facet.FacetFieldType">
                @foreach (var facetElement in facet.FacetElements)
                {
                    value++;
                    bool hideElement = (value > defaultFacetsCollapseCount) && Model.IsShowMoreLessButtonActive;
                    <li @(hideElement ? "hidden" : string.Empty)>
                        <input type="checkbox"
                               id="facet-checkbox-@facet.FacetFieldName-@facetElement.FacetValue"
                               data-facet-key="@facet.FacetFieldName"
                               data-facet-value="@facetElement.FacetValue" />

                        <label for="facet-checkbox-@facet.FacetFieldName-@facetElement.FacetValue" id="facet-@facetElement.FacetValue">@facetElement.FacetLabel</label>

                        @if (Model.DisplayItemCount)
                        {
                            <span>(@facetElement.FacetCount)</span>
                        }
                    </li>
                }
            </ul>
            if (facet.FacetElements.Count > defaultFacetsCollapseCount && Model.IsShowMoreLessButtonActive)
            {
                <button type="button" show-more="@Model.ShowMoreLabel" show-less="@Model.ShowLessLabel" data-facet-type="@facet.FacetFieldName" id="show-more-less-@facet.FacetFieldName">@Model.ShowMoreLabel</button>
            }
            if (facet.ShowNumberCustomRange)
            {
                <div class="">
                    @if (facet.FacetFieldType == "NumberWhole")
                    {
                        <input type="number"
                               id="from-@facet.FacetFieldName"
                               data-custom-range="true"
                               placeholder="Min"
                               onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
                    }
                    else
                    {
                        <input type="number"
                               id="from-@facet.FacetFieldName"
                               data-custom-range="true"
                               placeholder="Min" />
                    }
                    @if (facet.FacetFieldType == "NumberWhole")
                    {
                        <input type="number"
                               id="to-@facet.FacetFieldName"
                               data-custom-range="true"
                               placeholder="Max"
                               onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
                    }
                    else
                    {
                        <input type="number"
                               id="to-@facet.FacetFieldName"
                               data-custom-range="true"
                               placeholder="Max" />
                    }

                    <button type="button"
                            id="custom-range-btn-@facet.FacetFieldName"
                            data-custom-range-name="@facet.FacetFieldName"
                            data-custom-range-type="@facet.FacetFieldType">
                        >
                    </button>
                </div>
            }

            if (facet.ShowDateCustomRanges)
            {
                <div class="">
                    <input type="date"
                           id="from-@facet.FacetFieldName"
                           class=""
                           data-custom-range="true" />

                    <input type="date"
                           id="to-@facet.FacetFieldName"
                           class=""
                           data-custom-range="true" />

                    <button type="button"
                            id="custom-range-btn-@facet.FacetFieldName"
                            class=""
                            data-custom-range-name="@facet.FacetFieldName"
                            data-custom-range-type="@facet.FacetFieldType">
                        >
                    </button>

                </div>
            }
        }
    }
</div>
</div>

<input type="hidden" id="sf-currentPageUrl" value="@(ViewBag.CurrentPageUrl ?? string.Empty)" />

@Html.Script(Url.WidgetContent("Mvc/Scripts/Facets/query-string-utils.js"), "bottom", throwException: false)
@Html.Script(Url.WidgetContent("Mvc/Scripts/Facets/facets-widget.js"), "bottom", throwException: false)
